          0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
          0 :                            cpu     f3850
          0 :
          0 :                    ;;; i8251 Universal Synchronous/Asynchronous Receiver/Transmitter
          0 : =F0                USART:  equ     0F0H
          0 : =F0                USARTD: equ     USART+0         ; Data register
          0 : =F1                USARTS: equ     USART+1         ; Status register
          0 : =F1                USARTC: equ     USART+1         ; Control register
          0 :                            include "i8251.inc"
(1)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :
(1)       0 :                    ;;; i8251 USART device emulator.
(1)       0 : =6                 MODE_STOP_gp:   equ     6
(1)       0 : =C0                MODE_STOP_gm:   equ     11000000B
(1)       0 : =40                MODE_STOP1_gc:  equ     (1 << MODE_STOP_gp)
(1)       0 : =80                MODE_STOP15_gc: equ     (2 << MODE_STOP_gp)
(1)       0 : =C0                MODE_STOP2_gc:  equ     (3 << MODE_STOP_gp)
(1)       0 : =20                MODE_EVEN_bm:   equ     00100000B
(1)       0 : =10                MODE_PARITY_bm: equ     00010000B
(1)       0 : =2                 MODE_LEN_gp:    equ     2
(1)       0 : =C                 MODE_LEN_gm:    equ     00001100B
(1)       0 : =0                 MODE_LEN5_gc:   equ     (0 << MODE_LEN_gp)
(1)       0 : =4                 MODE_LEN6_gc:   equ     (1 << MODE_LEN_gp)
(1)       0 : =8                 MODE_LEN7_gc:   equ     (2 << MODE_LEN_gp)
(1)       0 : =C                 MODE_LEN8_gc:   equ     (3 << MODE_LEN_gp)
(1)       0 : =0                 MODE_BAUD_gp:   equ     0
(1)       0 : =3                 MODE_BAUD_gm:   equ     00000011B
(1)       0 : =1                 MODE_BAUD_X1:   equ     (1 << MODE_BAUD_gp)
(1)       0 : =2                 MODE_BAUD_X16:  equ (2 << MODE_BAUD_gp)
(1)       0 : =3                 MODE_BAUD_X64:  equ (3 << MODE_BAUD_gp)
(1)       0 :                    ;;; Bit Definition of command register
(1)       0 : =80                CMD_EH_bm:      equ     10000000B   ; Enter hunt mode
(1)       0 : =40                CMD_IR_bm:      equ     01000000B   ; Internal Reset
(1)       0 : =20                CMD_RTS_bm:     equ     00100000B   ; Request To Send
(1)       0 : =10                CMD_ER_bm:      equ     00010000B   ; Error Reset
(1)       0 : =8                 CMD_SBRK_bm:    equ     00001000B   ; Send Break
(1)       0 : =4                 CMD_RxEN_bm:    equ     00000100B   ; Receive Enable
(1)       0 : =2                 CMD_DTR_bm:     equ     00000010B   ; Data Terminal Ready
(1)       0 : =1                 CMD_TxEN_bm:    equ     00000001B   ; Transmit enable
(1)       0 :
(1)       0 :                    ;;; Bit definition of status register
(1)       0 : =80                ST_DSR_bm:      equ     10000000B   ; Data Set Ready
(1)       0 : =40                ST_BRK_bm:      equ     01000000B   ; BREAK detected
(1)       0 : =20                ST_FE_bm:       equ     00100000B   ; Framing Error
(1)       0 : =10                ST_OE_bm:       equ     00010000B   ; Iverrun Error
(1)       0 : =8                 ST_PE_bm:       equ     00001000B   ; Parity Error
(1)       0 : =4                 ST_TxEMPTY_bm:  equ     00000100B   ; Transmitter empty
(1)       0 : =2                 ST_RxRDY_bm:    equ     00000010B   ; Receiver ready
(1)       0 : =1                 ST_TxRDY_bm:    equ     00000001B   ; Transmitter ready
          0 :
          0 :                            org     0
          0 : 29 02 91                   jmp     init_usart
          3 :
       1000 :                            org     H'1000'
       1000 :                    stack:
        200 :                            org     0200H
        200 :                            include "stack.inc"
(1)     200 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)     200 :
(1)     200 :                    ;;; Stack pointer is 8-bit and pre-decrement and post-increment
(1)     200 : =8                 SP:     equ     8               ; SP is scratchpad register 8
(1)     200 : =F                 __STACK_U:      equ     ((stack - 1) >> 8)
(1)     200 :
(1)     200 :                    ;;; Initialize stack
(1)     200 :                    ;;; @param stack
(1)     200 :                    ;;; @clobber A
(1)     200 :                    init_stack:
(1)     200 : 70                         clr
(1)     201 : 58                         lr      SP, A
(1)     202 : 1C                         pop
(1)     203 :
(1)     203 :                    ;;; Push 0
(1)     203 :                    ;;; @clobber A H W
(1)     203 :                    ;;; PI push0
(1)     203 :                    push0:
(1)     203 : 38                         ds      SP              ; SP-=1
(1)     204 : 20 0F                      li      __STACK_U
(1)     206 : 5A                         lr      HU, A
(1)     207 : 48                         lr      A, SP
(1)     208 : 5B                         lr      HL, A
(1)     209 : 10                         lr      DC, H           ; DC0=SP
(1)     20A : 40                         lr      A, 0
(1)     20B : 17                         st
(1)     20C : 1C                         pop
(1)     20D :
(1)     20D :                    ;;; Push 1
(1)     20D :                    ;;; @clobber A H W
(1)     20D :                    ;;; PI push1
(1)     20D :                    push1:
(1)     20D : 38                         ds      SP              ; SP-=1
(1)     20E : 20 0F                      li      __STACK_U
(1)     210 : 5A                         lr      HU, A
(1)     211 : 48                         lr      A, SP
(1)     212 : 5B                         lr      HL, A
(1)     213 : 10                         lr      DC, H           ; DC0=SP
(1)     214 : 41                         lr      A, 1
(1)     215 : 17                         st
(1)     216 : 1C                         pop
(1)     217 :
(1)     217 :                    ;;; Push K
(1)     217 :                    ;;; @clobber A H W
(1)     217 :                    ;;; PI pushK
(1)     217 :                    pushK:
(1)     217 : 38                         ds      SP
(1)     218 : 38                         ds      SP              ; SP-=2
(1)     219 : 20 0F                      li      __STACK_U
(1)     21B : 5A                         lr      HU, A
(1)     21C : 48                         lr      A, SP
(1)     21D : 5B                         lr      HL, A
(1)     21E : 10                         lr      DC, H           ; DC0=SP
(1)     21F : 00                         lr      A, KU
(1)     220 : 17                         st
(1)     221 : 01                         lr      A, KL
(1)     222 : 17                         st
(1)     223 : 1C                         pop
(1)     224 :
(1)     224 :                    ;;; Push Q
(1)     224 :                    ;;; @clobber A H W
(1)     224 :                    ;;; PI pushQ
(1)     224 :                    pushQ:
(1)     224 : 38                         ds      SP
(1)     225 : 38                         ds      SP              ; SP -= 2
(1)     226 : 20 0F                      li      __STACK_U
(1)     228 : 5A                         lr      HU, A
(1)     229 : 48                         lr      A, SP
(1)     22A : 5B                         lr      HL, A
(1)     22B : 10                         lr      DC, H           ; DC0=SP
(1)     22C : 02                         lr      A, QU
(1)     22D : 17                         st
(1)     22E : 03                         lr      A, QL
(1)     22F : 17                         st
(1)     230 : 1C                         pop
(1)     231 :
(1)     231 :                    ;;; POP 0
(1)     231 :                    ;;; @clobber A H
(1)     231 :                    ;;; PI pop0
(1)     231 :                    pop0:
(1)     231 : 20 0F                      li      __STACK_U
(1)     233 : 5A                         lr      HU, A
(1)     234 : 48                         lr      A, SP
(1)     235 : 5B                         lr      HL, A
(1)     236 : 10                         lr      DC, H           ; DC0=SP
(1)     237 : 16                         lm
(1)     238 : 50                         lr      0, A
(1)     239 : 11                         lr      H, DC
(1)     23A : 4B                         lr      A, HL
(1)     23B : 58                         lr      SP, A
(1)     23C : 1C                         pop
(1)     23D :
(1)     23D :                    ;;; POP 1
(1)     23D :                    ;;; @clobber A H
(1)     23D :                    ;;; PI pop1
(1)     23D :                    pop1:
(1)     23D : 20 0F                      li      __STACK_U
(1)     23F : 5A                         lr      HU, A
(1)     240 : 48                         lr      A, SP
(1)     241 : 5B                         lr      HL, A
(1)     242 : 10                         lr      DC, H           ; DC0=SP
(1)     243 : 16                         lm
(1)     244 : 51                         lr      1, A
(1)     245 : 11                         lr      H, DC
(1)     246 : 4B                         lr      A, HL
(1)     247 : 58                         lr      SP, A
(1)     248 : 1C                         pop
(1)     249 :
(1)     249 :                    ;;; Pop K
(1)     249 :                    ;;; @clobber A H
(1)     249 :                    ;;; PI popK
(1)     249 :                    popK:
(1)     249 : 20 0F                      li      __STACK_U
(1)     24B : 5A                         lr      HU, A
(1)     24C : 48                         lr      A, SP
(1)     24D : 5B                         lr      HL, A
(1)     24E : 10                         lr      DC, H           ; DC0=SP
(1)     24F : 16                         lm
(1)     250 : 04                         lr      KU, A
(1)     251 : 16                         lm
(1)     252 : 05                         lr      KL, A
(1)     253 : 11                         lr      H, DC
(1)     254 : 4B                         lr      A, HL
(1)     255 : 58                         lr      SP, A
(1)     256 : 1C                         pop
(1)     257 :
(1)     257 :                    ;;; pop Q
(1)     257 :                    ;;; @clobber A H
(1)     257 :                    ;;; PI popQ
(1)     257 :                    popQ:
(1)     257 : 20 0F                      li      __STACK_U
(1)     259 : 5A                         lr      HU, A
(1)     25A : 48                         lr      A, SP
(1)     25B : 5B                         lr      HL, A
(1)     25C : 10                         lr      DC, H           ; DC0=SP
(1)     25D : 16                         lm
(1)     25E : 06                         lr      QU, A
(1)     25F : 16                         lm
(1)     260 : 07                         lr      QL, A
(1)     261 : 11                         lr      H, DC
(1)     262 : 4B                         lr      A, HL
(1)     263 : 58                         lr      SP, A
(1)     264 : 1C                         pop
(1)     265 :
(1)     265 :                    ;;; Call subroutine
(1)     265 :                    ;;; @clobber A H K W
(1)     265 :                    ;;; PI call
(1)     265 :                    ;;; DA subroutine
(1)     265 :                    call:
(1)     265 : 08                         lr      K, P
(1)     266 : 00                         lr      A, KU
(1)     267 : 5A                         lr      HU, A
(1)     268 : 01                         lr      A, KL
(1)     269 : 5B                         lr      HL, A
(1)     26A : 10                         lr      DC, H           ; DC0=PC1
(1)     26B : 16                         lm
(1)     26C : 04                         lr      KU, A
(1)     26D : 16                         lm
(1)     26E : 05                         lr      KL, A
(1)     26F : 09                         lr      P, K            ; PC1=subroutine address
(1)     270 : 11                         lr      H, DC
(1)     271 : 4A                         lr      A, HU
(1)     272 : 04                         lr      KU, A
(1)     273 : 4B                         lr      A, HL
(1)     274 : 05                         lr      KL, A           ; K=return address
(1)     275 : 38                         ds      SP
(1)     276 : 38                         ds      SP              ; SP-=2
(1)     277 : 20 0F                      li      __STACK_U
(1)     279 : 5A                         lr      HU, A
(1)     27A : 48                         lr      A, SP
(1)     27B : 5B                         lr      HL, A
(1)     27C : 10                         lr      DC, H           ; DC0=SP
(1)     27D : 00                         lr      A, KU
(1)     27E : 17                         st
(1)     27F : 01                         lr      A, KL
(1)     280 : 17                         st
(1)     281 : 1C                         pop                     ; jump to subroutine
(1)     282 :
(1)     282 :                    ;;; Return from subroutine
(1)     282 :                    ;;; @clobber A H K
(1)     282 :                    ;;; JMP return
(1)     282 :                    return:
(1)     282 : 20 0F                      li      __STACK_U
(1)     284 : 5A                         lr      HU, A
(1)     285 : 48                         lr      A, SP
(1)     286 : 5B                         lr      HL, A
(1)     287 : 10                         lr      DC, H           ; DC0=SP
(1)     288 : 16                         lm
(1)     289 : 04                         lr      KU, A
(1)     28A : 16                         lm
(1)     28B : 05                         lr      KL, A
(1)     28C : 11                         lr      H, DC
(1)     28D : 4B                         lr      A, HL
(1)     28E : 58                         lr      SP, A
(1)     28F : 09                         lr      P, K            ; PC1=return address
(1)     290 : 1C                         pop
        291 :
        291 :                    init_usart:
        291 : 28 02 00                   pi      init_stack
        294 : 70                         lis     0
        295 : 27 F1                      out     USARTC
        297 : 27 F1                      out     USARTC
        299 : 27 F1                      out     USARTC          ; safest way to sync mode
        29B :                    ;;; reset
        29B : 20 40                      li      CMD_IR_bm
        29D : 27 F1                      out     USARTC
        29F : 2B                         nop
        2A0 : 2B                         nop
        2A1 :                    ;;;  async 1stop 8data x16
        2A1 : 20 4E                      li      MODE_STOP1_gc|MODE_LEN8_gc|MODE_BAUD_X16
        2A3 : 27 F1                      out     USARTC
        2A5 : 2B                         nop
        2A6 : 2B                         nop
        2A7 :                    ;;;  RTS/DTR, error reset, Rx enable, Tx enable
        2A7 : 20 37                      li      CMD_RTS_bm|CMD_DTR_bm|CMD_ER_bm|CMD_RxEN_bm|CMD_TxEN_bm
        2A9 : 27 F1                      out     USARTC
        2AB :
        2AB : 28 02 65                   pi      call
        2AE : 10 00                      da      arith
        2B0 : 2F                         dc      H'2F'
        2B1 :
        2B1 :                    ;;; Print out char
        2B1 :                    ;;; @param 0 char
        2B1 :                    ;;; @clobber A
        2B1 :                    putchar:
        2B1 : 26 F1                      in      USARTS
        2B3 : 21 01                      ni      ST_TxRDY_bm
        2B5 : 84 FB                      bz      putchar
        2B7 : 40                         lr      A, 0
        2B8 : 27 F0                      out     USARTD
        2BA : 29 02 82                   jmp     return
        2BD :
        2BD :                    ;;; Print out newline
        2BD :                    ;;; @clobber 0 A
        2BD :                    newline:
        2BD : 20 0D                      li      H'0D'
        2BF : 50                         lr      0, A
        2C0 : 28 02 65                   pi      call
        2C3 : 02 B1                      da      putchar
        2C5 : 20 0A                      li      H'0A'
        2C7 : 50                         lr      0, A
        2C8 : 90 E8                      br      putchar
        2CA :
        2CA :                    ;;; Print out space
        2CA :                    ;;; @clobber 0 A
        2CA :                    putspace:
        2CA : 20 20                      li      C' '
        2CC : 50                         lr      0, A
        2CD : 90 E3                      br      putchar
        2CF :
        2CF :                    ;;; Print unsigned 16-bit integer as decimal
        2CF :                    ;;; @param 0:1 value
        2CF :                    ;;; @clobber 0 1 4 5 6 7 A
        2CF :                    print_uint16:
        2CF : 40                         lr      A, 0
        2D0 : 22 00                      oi      0
        2D2 : 94 06                      bnz     print_uint16_inner
        2D4 : 41                         lr      A, 1
        2D5 : 22 00                      oi      0
        2D7 : 84 29                      bz      print_uint16_zero
        2D9 :                    print_uint16_inner:
        2D9 : 40                         lr      A, 0
        2DA : 54                         lr      4, A
        2DB : 41                         lr      A, 1
        2DC : 55                         lr      5, A            ; 4:5=value
        2DD :                    print_uint16_loop:
        2DD : 44                         lr      A, 4
        2DE : 22 00                      oi      0
        2E0 : 94 09                      bnz     print_uint16_digit
        2E2 : 45                         lr      A, 5
        2E3 : 22 00                      oi      0
        2E5 : 94 04                      bnz     print_uint16_digit
        2E7 : 29 02 82                   jmp     return
        2EA :                    print_uint16_digit:
        2EA : 70                         clr
        2EB : 56                         lr      6, A
        2EC : 20 0A                      li      10
        2EE : 57                         lr      7, A            ; 6:7=10
        2EF : 28 02 65                   pi      call
        2F2 : 14 5D                      da      udiv16          ; 4:5/6:7=4:5...6:7
        2F4 : 47                         lr      A, 7
        2F5 : 50                         lr      0, A
        2F6 : 28 02 03                   pi      push0           ; push reminder
        2F9 : 28 02 65                   pi      call
        2FC : 02 DD                      da      print_uint16_loop
        2FE : 28 02 31                   pi      pop0
        301 :                    print_uint16_zero:
        301 : 20 30                      li      C'0'
        303 : C0                         as      0
        304 : 50                         lr      0, A
        305 : 29 02 B1                   jmp     putchar
        308 :
        308 :                    ;;; Print signed 16-bit integer as decimal
        308 :                    ;;; @param 0:1 value
        308 :                    ;;; @clobber 0 1 4 5 6 7 A
        308 :                    print_int16:
        308 : 40                         lr      A, 0
        309 : 22 00                      oi      0
        30B : 81 C3                      bp      print_uint16
        30D : 28 02 03                   pi      push0
        310 : 20 2D                      li      C'-'
        312 : 50                         lr      0, A
        313 : 28 02 65                   pi      call
        316 : 02 B1                      da      putchar         ; print '-'
        318 : 28 02 31                   pi      pop0
        31B : 40                         lr      A, 0
        31C : 18                         com
        31D : 50                         lr      0, A
        31E : 41                         lr      A, 1
        31F : 18                         com
        320 : 1F                         inc
        321 : 51                         lr      1, A
        322 : 40                         lr      A, 0
        323 : 19                         lnk
        324 : 50                         lr      0, A            ; 0:1=-value
        325 : 90 A9                      br      print_uint16
        327 :
        327 :                    ;;; Print out expression "operand1 operator operand2"
        327 :                    ;;; @param @2: operand1
        327 :                    ;;; @param @3: operand2
        327 :                    ;;; @param 0: operator letter
        327 :                    ;;; @clobber 0 1 A
        327 :                    expr:
        327 : 28 02 03                   pi      push0           ; save operator letter
        32A : 42                         lr      A, 2
        32B : 0B                         lr      IS, A
        32C : 4D                         lr      A, I
        32D : 50                         lr      0, A
        32E : 4C                         lr      A, S
        32F : 51                         lr      1, A
        330 : 28 02 65                   pi      call
        333 : 03 08                      da      print_int16
        335 : 28 02 65                   pi      call
        338 : 02 CA                      da      putspace
        33A : 28 02 31                   pi      pop0
        33D : 28 02 65                   pi      call
        340 : 02 B1                      da      putchar
        342 : 28 02 65                   pi      call
        345 : 02 CA                      da      putspace
        347 : 43                         lr      A, 3
        348 : 0B                         lr      IS, A
        349 : 4D                         lr      A, I
        34A : 50                         lr      0, A
        34B : 4C                         lr      A, S
        34C : 51                         lr      1, A
        34D : 90 BA                      br      print_int16
        34F :
        34F :                    ;;; Print out answer "= result\n"
        34F :                    ;;; @param @2: answer
        34F :                    ;;; @clobber 0 1 A
        34F :                    answer:
        34F : 28 02 65                   pi      call
        352 : 02 CA                      da      putspace
        354 : 20 3D                      li      C'='
        356 : 50                         lr      0, A
        357 : 28 02 65                   pi      call
        35A : 02 B1                      da      putchar
        35C : 28 02 65                   pi      call
        35F : 02 CA                      da      putspace
        361 : 42                         lr      A, 2
        362 : 0B                         lr      IS, A
        363 : 4D                         lr      A, I
        364 : 50                         lr      0, A
        365 : 4C                         lr      A, S
        366 : 51                         lr      1, A
        367 : 28 02 65                   pi      call
        36A : 03 08                      da      print_int16
        36C : 29 02 BD                   jmp     newline
        36F :
        36F :                    ;;; Scratchpad
        36F : =10                vA:     equ     H'10'
        36F : =12                vB:     equ     H'12'
        36F :
        36F :                    ;;; Compare 2 integers and print out "operand1 <=> operand2\n"
        36F :                    ;;; @param @2: operand1
        36F :                    ;;; @param @3: operand2
        36F :                    ;;; @clobber 0 1 A
        36F :                    comp:
        36F : 28 02 65                   pi      call
        372 : 13 53                      da      cmpsi2
        374 : 84 0D                      bz      comp_eq
        376 : 81 07                      bp      comp_gt
        378 : 91 0D                      bm      comp_lt
        37A : 20 3F                      li      C'?'
        37C : 90 0B                      br      comp_out
        37E :                    comp_gt:
        37E : 20 3E                      li      C'>'
        380 : 90 07                      br      comp_out
        382 :                    comp_eq:
        382 : 20 3D                      li      C'='
        384 : 90 03                      br      comp_out
        386 :                    comp_lt:
        386 : 20 3C                      li      C'<'
        388 :                    comp_out:
        388 : 50                         lr      0, A
        389 : 28 02 65                   pi      call
        38C : 03 27                      da      expr
        38E : 29 02 BD                   jmp     newline
        391 :
        391 :                    ;;; Store DC to scratchpad pointed by 2
        391 :                    ;;; @param DC value
        391 :                    ;;; @param 2 scratchpad number
        391 :                    ;;; @clobber H A
        391 :                    store_2:
        391 : 42                         lr      A, 2
        392 : 0B                         lr      IS, A
        393 : 11                         lr      H, DC
        394 : 4A                         lr      A, HU
        395 : 5D                         lr      I, A
        396 : 4B                         lr      A, HL
        397 : 5C                         lr      S, A
        398 : 1C                         pop
        399 :
        399 :                    ;;; Store DC to scratchpad pointed by 3
        399 :                    ;;; @param DC value
        399 :                    ;;; @param 3 scratchpad number
        399 :                    ;;; @clobber H A
        399 :                    store_3:
        399 : 43                         lr      A, 3
        39A : 0B                         lr      IS, A
        39B : 11                         lr      H, DC
        39C : 4A                         lr      A, HU
        39D : 5D                         lr      I, A
        39E : 4B                         lr      A, HL
        39F : 5C                         lr      S, A
        3A0 : 1C                         pop
        3A1 :
       1000 :                            org     H'1000'
       1000 :                    arith:
       1000 : 20 10                      li      vA
       1002 : 52                         lr      2, A            ; 2 points vA
       1003 : 20 12                      li      vB
       1005 : 53                         lr      3, A            ; 3 points vB
       1006 :
       1006 : 2A 00 00                   dci     0
       1009 : 28 03 91                   pi      store_2         ; vA=0
       100C : 2A 92 A0                   dci     -28000
       100F : 28 03 99                   pi      store_3         ; vB=-28000
       1012 : 20 2D                      li      C'-'
       1014 : 50                         lr      0, A
       1015 : 28 02 65                   pi      call
       1018 : 03 27                      da      expr
       101A : 28 02 65                   pi      call
       101D : 13 06                      da      negsi2
       101F : 28 02 65                   pi      call
       1022 : 03 4F                      da      answer          ; 28000
       1024 :
       1024 : 2A 00 00                   dci     0
       1027 : 28 03 91                   pi      store_2         ; vA=0
       102A : 2A 6D 60                   dci     28000
       102D : 28 03 99                   pi      store_3         ; vB=28000]
       1030 : 20 2D                      li      C'-'
       1032 : 50                         lr      0, A
       1033 : 28 02 65                   pi      call
       1036 : 03 27                      da      expr
       1038 : 28 02 65                   pi      call
       103B : 13 06                      da      negsi2
       103D : 28 02 65                   pi      call
       1040 : 03 4F                      da      answer          ; -28000
       1042 :
       1042 : 2A 46 50                   dci     18000
       1045 : 28 03 91                   pi      store_2         ; vA=18000
       1048 : 2A 6D 60                   dci     28000
       104B : 28 03 99                   pi      store_3         ; vB=28000
       104E : 20 2B                      li      C'+'
       1050 : 50                         lr      0, A
       1051 : 28 02 65                   pi      call
       1054 : 03 27                      da      expr
       1056 : 28 02 65                   pi      call
       1059 : 13 27                      da      addsi2
       105B : 28 02 65                   pi      call
       105E : 03 4F                      da      answer          ; -19536
       1060 :
       1060 : 2A 46 50                   dci     18000
       1063 : 28 03 91                   pi      store_2         ; vA=18000
       1066 : 2A B9 B0                   dci     -18000
       1069 : 28 03 99                   pi      store_3         ; vB=-18000
       106C : 20 2B                      li      C'+'
       106E : 50                         lr      0, A
       106F : 28 02 65                   pi      call
       1072 : 03 27                      da      expr
       1074 : 28 02 65                   pi      call
       1077 : 13 27                      da      addsi2
       1079 : 28 02 65                   pi      call
       107C : 03 4F                      da      answer          ; 0
       107E :
       107E : 2A B9 B0                   dci     -18000
       1081 : 28 03 91                   pi      store_2         ; vA=-18000
       1084 : 2A B9 B0                   dci     -18000
       1087 : 28 03 99                   pi      store_3         ; vB=-18000
       108A : 20 2B                      li      C'+'
       108C : 50                         lr      0, A
       108D : 28 02 65                   pi      call
       1090 : 03 27                      da      expr
       1092 : 28 02 65                   pi      call
       1095 : 13 27                      da      addsi2
       1097 : 28 02 65                   pi      call
       109A : 03 4F                      da      answer          ; 29536
       109C :
       109C : 2A 46 50                   dci     18000
       109F : 28 03 91                   pi      store_2         ; vA=18000
       10A2 : 2A 92 A0                   dci     -28000
       10A5 : 28 03 99                   pi      store_3         ; vB=-28000
       10A8 : 20 2D                      li      C'-'
       10AA : 50                         lr      0, A
       10AB : 28 02 65                   pi      call
       10AE : 03 27                      da      expr
       10B0 : 28 02 65                   pi      call
       10B3 : 13 3A                      da      subsi2
       10B5 : 28 02 65                   pi      call
       10B8 : 03 4F                      da      answer          ; -19536
       10BA :
       10BA : 2A 46 50                   dci     18000
       10BD : 28 03 91                   pi      store_2         ; vA=18000
       10C0 : 2A B9 B0                   dci     -18000
       10C3 : 28 03 99                   pi      store_3         ; vB=-18000
       10C6 : 20 2D                      li      C'-'
       10C8 : 50                         lr      0, A
       10C9 : 28 02 65                   pi      call
       10CC : 03 27                      da      expr
       10CE : 28 02 65                   pi      call
       10D1 : 13 3A                      da      subsi2
       10D3 : 28 02 65                   pi      call
       10D6 : 03 4F                      da      answer          ; 29536
       10D8 :
       10D8 : 2A 92 A0                   dci     -28000
       10DB : 28 03 91                   pi      store_2         ; vA=-28000
       10DE : 2A B9 B0                   dci     -18000
       10E1 : 28 03 99                   pi      store_3         ; vB=-18000
       10E4 : 20 2D                      li      C'-'
       10E6 : 50                         lr      0, A
       10E7 : 28 02 65                   pi      call
       10EA : 03 27                      da      expr
       10EC : 28 02 65                   pi      call
       10EF : 13 3A                      da      subsi2
       10F1 : 28 02 65                   pi      call
       10F4 : 03 4F                      da      answer          ; -10000
       10F6 :
       10F6 : 2A 00 64                   dci     100
       10F9 : 28 03 91                   pi      store_2         ; vA=100
       10FC : 2A 01 2C                   dci     300
       10FF : 28 03 99                   pi      store_3         ; vB=300
       1102 : 20 2A                      li      C'*'
       1104 : 50                         lr      0, A
       1105 : 28 02 65                   pi      call
       1108 : 03 27                      da      expr
       110A : 28 02 65                   pi      call
       110D : 13 E0                      da      mulsi2
       110F : 28 02 65                   pi      call
       1112 : 03 4F                      da      answer          ; 30000
       1114 :
       1114 : 2A 00 C8                   dci     200
       1117 : 28 03 91                   pi      store_2         ; vA=200
       111A : 2A FF 9C                   dci     -100
       111D : 28 03 99                   pi      store_3         ; vB=-100
       1120 : 20 2A                      li      C'*'
       1122 : 50                         lr      0, A
       1123 : 28 02 65                   pi      call
       1126 : 03 27                      da      expr
       1128 : 28 02 65                   pi      call
       112B : 13 E0                      da      mulsi2
       112D : 28 02 65                   pi      call
       1130 : 03 4F                      da      answer          ; -20000
       1132 :
       1132 : 2A 01 2C                   dci     300
       1135 : 28 03 91                   pi      store_2         ; vA=300
       1138 : 2A FF 38                   dci     -200
       113B : 28 03 99                   pi      store_3         ; vB=-200
       113E : 20 2A                      li      C'*'
       1140 : 50                         lr      0, A
       1141 : 28 02 65                   pi      call
       1144 : 03 27                      da      expr
       1146 : 28 02 65                   pi      call
       1149 : 13 E0                      da      mulsi2
       114B : 28 02 65                   pi      call
       114E : 03 4F                      da      answer          ; 5536
       1150 :
       1150 : 2A FF 9C                   dci     -100
       1153 : 28 03 91                   pi      store_2         ; vA=-100
       1156 : 2A 01 2C                   dci     300
       1159 : 28 03 99                   pi      store_3         ; vB=300
       115C : 20 2A                      li      C'*'
       115E : 50                         lr      0, A
       115F : 28 02 65                   pi      call
       1162 : 03 27                      da      expr
       1164 : 28 02 65                   pi      call
       1167 : 13 E0                      da      mulsi2
       1169 : 28 02 65                   pi      call
       116C : 03 4F                      da      answer          ; -30000
       116E :
       116E : 2A FF 38                   dci     -200
       1171 : 28 03 91                   pi      store_2         ; vA=-200
       1174 : 2A FF 9C                   dci     -100
       1177 : 28 03 99                   pi      store_3         ; vB=-100
       117A : 20 2A                      li      C'*'
       117C : 50                         lr      0, A
       117D : 28 02 65                   pi      call
       1180 : 03 27                      da      expr
       1182 : 28 02 65                   pi      call
       1185 : 13 E0                      da      mulsi2
       1187 : 28 02 65                   pi      call
       118A : 03 4F                      da      answer          ; 20000
       118C :
       118C : 2A 75 30                   dci     30000
       118F : 28 03 91                   pi      store_2         ; vA=30000
       1192 : 2A 00 64                   dci     100
       1195 : 28 03 99                   pi      store_3         ; vB=100
       1198 : 20 2F                      li      C'/'
       119A : 50                         lr      0, A
       119B : 28 02 65                   pi      call
       119E : 03 27                      da      expr
       11A0 : 28 02 65                   pi      call
       11A3 : 15 00                      da      divsi2
       11A5 : 28 02 65                   pi      call
       11A8 : 03 4F                      da      answer          ; 30
       11AA :
       11AA : 2A FF 38                   dci     -200
       11AD : 28 03 91                   pi      store_2         ; vA=-200
       11B0 : 2A 00 64                   dci     100
       11B3 : 28 03 99                   pi      store_3         ; vB=100
       11B6 : 20 2F                      li      C'/'
       11B8 : 50                         lr      0, A
       11B9 : 28 02 65                   pi      call
       11BC : 03 27                      da      expr
       11BE : 28 02 65                   pi      call
       11C1 : 15 00                      da      divsi2
       11C3 : 28 02 65                   pi      call
       11C6 : 03 4F                      da      answer          ; -2
       11C8 :
       11C8 : 2A 8A D0                   dci     -30000
       11CB : 28 03 91                   pi      store_2         ; vA=-30000
       11CE : 2A FF 38                   dci     -200
       11D1 : 28 03 99                   pi      store_3         ; vB=-200
       11D4 : 20 2F                      li      C'/'
       11D6 : 50                         lr      0, A
       11D7 : 28 02 65                   pi      call
       11DA : 03 27                      da      expr
       11DC : 28 02 65                   pi      call
       11DF : 15 00                      da      divsi2
       11E1 : 28 02 65                   pi      call
       11E4 : 03 4F                      da      answer          ; 150
       11E6 :
       11E6 : 2A 8A D0                   dci     -30000
       11E9 : 28 03 91                   pi      store_2         ; vA=-30000
       11EC : 2A 00 4E                   dci     78
       11EF : 28 03 99                   pi      store_3         ; vB=78
       11F2 : 20 2F                      li      C'/'
       11F4 : 50                         lr      0, A
       11F5 : 28 02 65                   pi      call
       11F8 : 03 27                      da      expr
       11FA : 28 02 65                   pi      call
       11FD : 15 00                      da      divsi2
       11FF : 28 02 65                   pi      call
       1202 : 03 4F                      da      answer          ; -384
       1204 :
       1204 : 2A 13 88                   dci     5000
       1207 : 28 03 91                   pi      store_2         ; vA=5000
       120A : 2A 0F A0                   dci     4000
       120D : 28 03 99                   pi      store_3         ; vB=4000
       1210 : 28 02 65                   pi      call
       1213 : 03 6F                      da      comp
       1215 :
       1215 : 2A 13 88                   dci     5000
       1218 : 28 03 91                   pi      store_2         ; vA=5000
       121B : 2A 13 88                   dci     5000
       121E : 28 03 99                   pi      store_3         ; vB=5000
       1221 : 28 02 65                   pi      call
       1224 : 03 6F                      da      comp
       1226 :
       1226 : 2A 0F A0                   dci     4000
       1229 : 28 03 91                   pi      store_2         ; vA=4000
       122C : 2A 13 88                   dci     5000
       122F : 28 03 99                   pi      store_3         ; vB=5000
       1232 : 28 02 65                   pi      call
       1235 : 03 6F                      da      comp           
       1237 :
       1237 : 2A EC 78                   dci     -5000
       123A : 28 03 91                   pi      store_2         ; vA=-5000
       123D : 2A F0 60                   dci     -4000
       1240 : 28 03 99                   pi      store_3         ; vB=-4000
       1243 : 28 02 65                   pi      call
       1246 : 03 6F                      da      comp
       1248 :
       1248 : 2A EC 78                   dci     -5000
       124B : 28 03 91                   pi      store_2         ; vA=-5000
       124E : 2A EC 78                   dci     -5000
       1251 : 28 03 99                   pi      store_3         ; vB=-5000
       1254 : 28 02 65                   pi      call
       1257 : 03 6F                      da      comp
       1259 :
       1259 : 2A F0 60                   dci     -4000
       125C : 28 03 91                   pi      store_2         ; vA=-4000
       125F : 2A EC 78                   dci     -5000
       1262 : 28 03 99                   pi      store_3         ; vB=-5000
       1265 : 28 02 65                   pi      call
       1268 : 03 6F                      da      comp           
       126A :
       126A : 2A 7F BC                   dci     32700
       126D : 28 03 91                   pi      store_2         ; vA=32700
       1270 : 2A 7F 58                   dci     32600
       1273 : 28 03 99                   pi      store_3         ; vB=32600
       1276 : 28 02 65                   pi      call
       1279 : 03 6F                      da      comp           
       127B :
       127B : 2A 7F BC                   dci     32700
       127E : 28 03 91                   pi      store_2         ; vA=32700
       1281 : 2A 7F BC                   dci     32700
       1284 : 28 03 99                   pi      store_3         ; vB=32700
       1287 : 28 02 65                   pi      call
       128A : 03 6F                      da      comp           
       128C :
       128C : 2A 7F 58                   dci     32600
       128F : 28 03 91                   pi      store_2         ; vA=32600
       1292 : 2A 7F BC                   dci     32700
       1295 : 28 03 99                   pi      store_3         ; vB=32700
       1298 : 28 02 65                   pi      call
       129B : 03 6F                      da      comp           
       129D :
       129D : 2A 80 44                   dci     -32700
       12A0 : 28 03 91                   pi      store_2         ; vA=-32700
       12A3 : 2A 80 A8                   dci     -32600
       12A6 : 28 03 99                   pi      store_3         ; vB=-32600
       12A9 : 28 02 65                   pi      call
       12AC : 03 6F                      da      comp           
       12AE :
       12AE : 2A 80 44                   dci     -32700
       12B1 : 28 03 91                   pi      store_2         ; vA=-32700
       12B4 : 2A 80 44                   dci     -32700
       12B7 : 28 03 99                   pi      store_3         ; vB=-32700
       12BA : 28 02 65                   pi      call
       12BD : 03 6F                      da      comp           
       12BF :
       12BF : 2A 80 A8                   dci     -32600
       12C2 : 28 03 91                   pi      store_2         ; vA=-32600
       12C5 : 2A 80 44                   dci     -32700
       12C8 : 28 03 99                   pi      store_3         ; vB=-32700
       12CB : 28 02 65                   pi      call
       12CE : 03 6F                      da      comp           
       12D0 :
       12D0 : 2A 46 50                   dci     18000
       12D3 : 28 03 91                   pi      store_2         ; vA=18000
       12D6 : 2A 92 A0                   dci     -28000
       12D9 : 28 03 99                   pi      store_3         ; vB=-28000
       12DC : 28 02 65                   pi      call
       12DF : 03 6F                      da      comp           
       12E1 :
       12E1 : 2A 46 50                   dci     18000
       12E4 : 28 03 91                   pi      store_2         ; vA=18000
       12E7 : 2A 46 50                   dci     18000
       12EA : 28 03 99                   pi      store_3         ; vB=18000
       12ED : 28 02 65                   pi      call
       12F0 : 03 6F                      da      comp           
       12F2 :
       12F2 : 2A 92 A0                   dci     -28000
       12F5 : 28 03 91                   pi      store_2         ; vA=-28000
       12F8 : 2A 46 50                   dci     18000
       12FB : 28 03 99                   pi      store_3         ; vB=18000
       12FE : 28 02 65                   pi      call
       1301 : 03 6F                      da      comp           
       1303 :
       1303 : 29 02 82                   jmp     return
       1306 :
       1306 :                            include "arith.inc"
(1)    1306 :                            cpu     f3850
(1)    1306 :
(1)    1306 :                    ;;; Negation; result = -value
(1)    1306 :                    ;;; @param @2: result
(1)    1306 :                    ;;; @param @3: value
(1)    1306 :                    ;;; @clobber 0 1 ISAR A
(1)    1306 :                    negsi2:
(1)    1306 : 43                         lr      A, 3
(1)    1307 : 0B                         lr      IS, A           ; point MSB(value)
(1)    1308 : 4D                         lr      A, I
(1)    1309 : 18                         com
(1)    130A : 50                         lr      0, A            ; MSB(~value)
(1)    130B : 4C                         lr      A, S
(1)    130C : 18                         com
(1)    130D : 51                         lr      1, A            ; LSB(~value)
(1)    130E : 42                         lr      A, 2
(1)    130F : 1F                         inc
(1)    1310 : 0B                         lr      IS, A           ; point LSB(@2)
(1)    1311 : 41                         lr      A, 1
(1)    1312 : 1F                         inc
(1)    1313 : 5E                         lr      D, A            ; LSB(-value)
(1)    1314 : 40                         lr      A, 0
(1)    1315 : 19                         lnk
(1)    1316 : 5C                         lr      S, A            ; MSB(-value)
(1)    1317 : 29 02 82                   jmp     return
(1)    131A :
(1)    131A :                    ;;; Negation; result = -result
(1)    131A :                    ;;; @param 0:1 result
(1)    131A :                    ;;; @clobber A
(1)    131A :                    negsi1:
(1)    131A : 40                         lr      A, 0
(1)    131B : 18                         com
(1)    131C : 50                         lr      0, A            ; MSB(~result)
(1)    131D : 41                         lr      A, 1
(1)    131E : 18                         com
(1)    131F : 1F                         inc
(1)    1320 : 51                         lr      1, A            ; LSB(-result)
(1)    1321 : 40                         lr      A, 0
(1)    1322 : 19                         lnk
(1)    1323 : 50                         lr      0, A            ; MSB(-result)
(1)    1324 : 29 02 82                   jmp     return
(1)    1327 :
(1)    1327 :                    ;;; Signed addition: summand += addend
(1)    1327 :                    ;;; @param @2: summand
(1)    1327 :                    ;;; @param @3: addend
(1)    1327 :                    ;;; @clobber 0 1 ISAR A
(1)    1327 :                    addsi2:
(1)    1327 : 43                         lr      A, 3
(1)    1328 : 0B                         lr      IS, A           ; point MSB(addend)
(1)    1329 : 4D                         lr      A, I
(1)    132A : 50                         lr      0, A            ; MSB(addend)
(1)    132B : 4C                         lr      A, S
(1)    132C : 51                         lr      1, A            ; LSB(addend)
(1)    132D : 42                         lr      A, 2
(1)    132E : 1F                         inc
(1)    132F : 0B                         lr      IS, A           ; point LSB(summand)
(1)    1330 : 4C                         lr      A, S
(1)    1331 : C1                         as      1
(1)    1332 : 5E                         lr      D, A            ; store LSB(summand)
(1)    1333 : 4C                         lr      A, S
(1)    1334 : 19                         lnk
(1)    1335 : C0                         as      0
(1)    1336 : 5C                         lr      S, A
(1)    1337 : 29 02 82                   jmp     return
(1)    133A :
(1)    133A :                    ;;; Singed subtraction: minuend -= subtrahend
(1)    133A :                    ;;; @param @2: minuend
(1)    133A :                    ;;; @param @3: subtrahend
(1)    133A :                    ;;; @clobber 0 1 A
(1)    133A :                    subsi2:
(1)    133A : 43                         lr      A, 3
(1)    133B : 0B                         lr      IS, A           ; point MSB(subtrand)
(1)    133C : 4D                         lr      A, I
(1)    133D : 18                         com
(1)    133E : 50                         lr      0, A            ; MSB(~subtrand)
(1)    133F : 4C                         lr      A, S
(1)    1340 : 18                         com
(1)    1341 : 1F                         inc
(1)    1342 : 51                         lr      1, A            ; LSB(-subtrand)
(1)    1343 : 40                         lr      A, 0
(1)    1344 : 19                         lnk
(1)    1345 : 50                         lr      0, A            ; MSB(-subtrand)
(1)    1346 : 42                         lr      A, 2
(1)    1347 : 1F                         inc
(1)    1348 : 0B                         lr      IS, A           ; point LSB(minuend)
(1)    1349 : 4C                         lr      A, S
(1)    134A : C1                         as      1
(1)    134B : 5E                         lr      D, A            ; store LSB(minuend)
(1)    134C : 4C                         lr      A, S
(1)    134D : 19                         lnk
(1)    134E : C0                         as      0
(1)    134F : 5C                         lr      S, A
(1)    1350 : 29 02 82                   jmp     return
(1)    1353 :
(1)    1353 :                    ;;; Signed comparison: minuend - subtrahend
(1)    1353 :                    ;;; @param @2: minuend
(1)    1353 :                    ;;; @param @3: subtrahend
(1)    1353 :                    ;;; @return W.Z, W.S
(1)    1353 :                    ;;; @clobber 0 1 ISAR A J
(1)    1353 :                    cmpsi2:
(1)    1353 : 43                         lr      A, 3
(1)    1354 : 0B                         lr      IS, A           ; point MSB(subtrahend)
(1)    1355 : 4D                         lr      A, I
(1)    1356 : 18                         com
(1)    1357 : 50                         lr      0, A            ; MSB(~subtrahend)
(1)    1358 : 4C                         lr      A, S
(1)    1359 : 18                         com
(1)    135A : 1F                         inc
(1)    135B : 51                         lr      1, A            ; LSB(-subtrahend)
(1)    135C : 40                         lr      A, 0
(1)    135D : 19                         lnk
(1)    135E : 50                         lr      0, A            ; MSB(-subtrahend)
(1)    135F : 42                         lr      A, 2
(1)    1360 : 1F                         inc
(1)    1361 : 0B                         lr      IS, A           ; point LSB(minuend)
(1)    1362 : 4E                         lr      A, D
(1)    1363 : C1                         as      1
(1)    1364 : 51                         lr      1, A            ; LSB(minued-subtrahend)
(1)    1365 : 4C                         lr      A, S
(1)    1366 : 19                         lnk
(1)    1367 : C0                         as      0
(1)    1368 : 50                         lr      0, A            ; MSB(minued-subtrahend)
(1)    1369 : 70                         clr                     ; MSB(A)=overflow
(1)    136A : 98 03                      bno     cmpsi2_nov      ; no overflow
(1)    136C : 23 80                      xi      H'80'           ; MSB(A)=overflow
(1)    136E :                    cmpsi2_nov:
(1)    136E : 59                         lr      J, A            ; MSB(J)=overflow
(1)    136F : 40                         lr      A, 0
(1)    1370 : 22 00                      oi      0
(1)    1372 : 94 06                      bnz     cmpsi2_cmp
(1)    1374 : 41                         lr      A, 1
(1)    1375 : 22 00                      oi      0
(1)    1377 : 84 05                      bz      cmpsi2_eq       ; minued==subtrahend
(1)    1379 :                    cmpsi2_cmp
(1)    1379 : 40                         lr      A, 0            ; sign(minued-subtrahend)
(1)    137A : E9                         xs      J               ; sign^overflow
(1)    137B : 22 01                      oi      1               ; W.Z=0, W.S=result
(1)    137D :                    cmpsi2_eq:
(1)    137D : 29 02 82                   jmp     return          ; W.Z=1
(1)    1380 :
(1)    1380 :                    ;;; Unsigned multiplication: result = multiplicand * multiplier
(1)    1380 :                    ;;; @param 4:5 multiplicand
(1)    1380 :                    ;;; @param 6:7 multiplier
(1)    1380 :                    ;;; @return 4:5 result
(1)    1380 :                    ;;; @clobber 4 5 6 7
(1)    1380 :                    umul16:
(1)    1380 : 28 02 24                   pi      pushQ           ; save Q
(1)    1383 : 28 02 03                   pi      push0           ; save 0
(1)    1386 : 70                         clr
(1)    1387 : 06                         lr      QU, A
(1)    1388 : 07                         lr      QL, A           ; result=0
(1)    1389 : 90 25                      br      umul16_check
(1)    138B :                    umul16_loop:
(1)    138B : 47                         lr      A, 7
(1)    138C : 21 01                      ni      1
(1)    138E : 84 08                      bz      umul16_sr       ; lsb(multiplier)==0
(1)    1390 : 03                         lr      A, QL
(1)    1391 : C5                         as      5
(1)    1392 : 07                         lr      QL, A
(1)    1393 : 02                         lr      A, QU
(1)    1394 : 19                         lnk
(1)    1395 : C4                         as      4
(1)    1396 : 06                         lr      QU, A           ; result += multiplicand
(1)    1397 :                    umul16_sr:
(1)    1397 : 70                         clr
(1)    1398 : 50                         lr      0, A            ; 0=carry
(1)    1399 : 46                         lr      A, 6
(1)    139A : 21 01                      ni      1
(1)    139C : 84 04                      bz      umul16_sr_nz
(1)    139E : 20 80                      li      H'80'
(1)    13A0 : 50                         lr      0, A            ; set carry
(1)    13A1 :                    umul16_sr_nz:
(1)    13A1 : 46                         lr      A, 6
(1)    13A2 : 12                         sr      1
(1)    13A3 : 56                         lr      6, A
(1)    13A4 : 47                         lr      A, 7
(1)    13A5 : 12                         sr      1
(1)    13A6 : E0                         xs      0               ; shift in carry
(1)    13A7 : 57                         lr      7, A            ; multiplier >>= 1
(1)    13A8 :                    umul16_next:
(1)    13A8 : 45                         lr      A, 5
(1)    13A9 : C5                         as      5
(1)    13AA : 55                         lr      5, A
(1)    13AB : 44                         lr      A, 4
(1)    13AC : 19                         lnk
(1)    13AD : C4                         as      4
(1)    13AE : 54                         lr      4, A            ; multiplicand <<= 1
(1)    13AF :                    umul16_check:
(1)    13AF : 46                         lr      A, 6
(1)    13B0 : 22 00                      oi      0
(1)    13B2 : 94 D8                      bnz     umul16_loop
(1)    13B4 : 47                         lr      A, 7
(1)    13B5 : 22 00                      oi      0
(1)    13B7 : 94 D3                      bnz     umul16_loop     ; while multiplier != 0
(1)    13B9 : 02                         lr      A, QU
(1)    13BA : 54                         lr      4, A
(1)    13BB : 03                         lr      A, QL
(1)    13BC : 55                         lr      5, A            ; 4:5=result
(1)    13BD : 28 02 31                   pi      pop0            ; restore 0
(1)    13C0 : 28 02 57                   pi      popQ            ; restore Q
(1)    13C3 : 29 02 82                   jmp     return
(1)    13C6 :
(1)    13C6 :                    ;;; Unsigned multiplication: multiplicand = multiplier
(1)    13C6 :                    ;;; @param @2: multiplicand
(1)    13C6 :                    ;;; @param @3: multiplier
(1)    13C6 :                    ;;; @clobber 4 5 6 7 A
(1)    13C6 :                    umulsi2:
(1)    13C6 : 42                         lr      A, 2
(1)    13C7 : 0B                         lr      IS, A
(1)    13C8 : 4D                         lr      A, I
(1)    13C9 : 54                         lr      4, A
(1)    13CA : 4C                         lr      A, S
(1)    13CB : 55                         lr      5, A            ; 4:5=multiplicand
(1)    13CC : 43                         lr      A, 3
(1)    13CD : 0B                         lr      IS, A
(1)    13CE : 4D                         lr      A, I
(1)    13CF : 56                         lr      6, A
(1)    13D0 : 4C                         lr      A, S
(1)    13D1 : 57                         lr      7, A            ; 6:7=multiplier
(1)    13D2 : 28 02 65                   pi      call
(1)    13D5 : 13 80                      da      umul16
(1)    13D7 : 42                         lr      A, 2
(1)    13D8 : 0B                         lr      IS, A
(1)    13D9 : 44                         lr      A, 4
(1)    13DA : 5D                         lr      I, A
(1)    13DB : 45                         lr      A, 5
(1)    13DC : 5C                         lr      S, A            ; @2=result
(1)    13DD : 29 02 82                   jmp     return
(1)    13E0 :
(1)    13E0 :                    ;;; Signed multiplication: multiplicand = multiplier
(1)    13E0 :                    ;;; @param @2: multiplicand
(1)    13E0 :                    ;;; @param @3: multiplier
(1)    13E0 :                    ;;; @clobber 4 5 6 7 A
(1)    13E0 :                    mulsi2:
(1)    13E0 : 42                         lr      A, 2
(1)    13E1 : 1F                         inc
(1)    13E2 : 0B                         lr      IS, A           ; point LSB(@2)
(1)    13E3 : 4E                         lr      A, D
(1)    13E4 : 55                         lr      5, A
(1)    13E5 : 4C                         lr      A, S
(1)    13E6 : 54                         lr      4, A            ; 4:5=multiplicand
(1)    13E7 : 22 00                      oi      0
(1)    13E9 : 81 0A                      bp      mulsi2_multiplier
(1)    13EB : 18                         com
(1)    13EC : 54                         lr      4, A            ; MSB(~multiplicand)
(1)    13ED : 45                         lr      A, 5
(1)    13EE : 18                         com
(1)    13EF : 1F                         inc
(1)    13F0 : 55                         lr      5, A            ; LSB(-multiplicand)
(1)    13F1 : 44                         lr      A, 4
(1)    13F2 : 19                         lnk
(1)    13F3 : 54                         lr      4, A            ; MSB(-multiplicand)
(1)    13F4 :                    mulsi2_multiplier:
(1)    13F4 : 43                         lr      A, 3
(1)    13F5 : 1F                         inc
(1)    13F6 : 0B                         lr      IS, A           ; point LSB(@3)
(1)    13F7 : 4E                         lr      A, D
(1)    13F8 : 57                         lr      7, A
(1)    13F9 : 4C                         lr      A, S
(1)    13FA : 56                         lr      6, A
(1)    13FB : 22 00                      oi      0
(1)    13FD : 81 0A                      bp      mulsi2_multiply
(1)    13FF : 18                         com
(1)    1400 : 56                         lr      6, A            ; MSB(~multiplyer)
(1)    1401 : 47                         lr      A, 7
(1)    1402 : 18                         com
(1)    1403 : 1F                         inc
(1)    1404 : 57                         lr      7, A            ; LSB(-multiplyer)
(1)    1405 : 46                         lr      A, 6
(1)    1406 : 19                         lnk
(1)    1407 : 56                         lr      6, A            ; MSB(-multiplyer)
(1)    1408 :                    mulsi2_multiply:
(1)    1408 : 28 02 65                   pi      call
(1)    140B : 13 80                      da      umul16
(1)    140D : 43                         lr      A, 3
(1)    140E : 0B                         lr      IS, A
(1)    140F : 4C                         lr      A, S
(1)    1410 : 56                         lr      6, A            ; MSB(multiplyer)
(1)    1411 : 42                         lr      A, 2
(1)    1412 : 0B                         lr      IS, A
(1)    1413 : 4C                         lr      A, S            ; MSB(multiplicand)
(1)    1414 : E6                         xs      6               ; MSB(multiplicand^multiplyer)
(1)    1415 : 81 0B                      bp      mulsi2_store
(1)    1417 : 44                         lr      A, 4
(1)    1418 : 18                         com
(1)    1419 : 54                         lr      4, A            ; MSB(~result)
(1)    141A : 45                         lr      A, 5
(1)    141B : 18                         com
(1)    141C : 1F                         inc
(1)    141D : 55                         lr      5, A            ; LSB(-result)
(1)    141E : 44                         lr      A, 4
(1)    141F : 19                         lnk
(1)    1420 : 54                         lr      4, A            ; MSB(-result)
(1)    1421 :                    mulsi2_store:
(1)    1421 : 44                         lr      A, 4
(1)    1422 : 5D                         lr      I, A
(1)    1423 : 45                         lr      A, 5
(1)    1424 : 5C                         lr      S, A            ; @2=result
(1)    1425 : 29 02 82                   jmp     return
(1)    1428 :
(1)    1428 :                    ;;; Unsigned comparison: minuend - subtrahend
(1)    1428 :                    ;;; @param 4:5 minuend
(1)    1428 :                    ;;; @param 6:7 subtrahend
(1)    1428 :                    ;;; @clobber J
(1)    1428 :                    ;;; @return W.Z W.S
(1)    1428 :                    ucmp16:
(1)    1428 : 28 02 0D                   pi      push1
(1)    142B : 28 02 03                   pi      push0
(1)    142E : 46                         lr      A, 6
(1)    142F : 18                         com
(1)    1430 : 50                         lr      0, A
(1)    1431 : 47                         lr      A, 7
(1)    1432 : 18                         com
(1)    1433 : 1F                         inc
(1)    1434 : 51                         lr      1, A
(1)    1435 : 40                         lr      A, 0
(1)    1436 : 19                         lnk
(1)    1437 : 50                         lr      0, A            ; 0:1=-subtrahend
(1)    1438 : 45                         lr      A, 5
(1)    1439 : C1                         as      1
(1)    143A : 51                         lr      1, A
(1)    143B : 44                         lr      A, 4
(1)    143C : 19                         lnk
(1)    143D : C0                         as      0
(1)    143E : 50                         lr      0, A            ; 0:1=minuend-subtrahend
(1)    143F : 1E                         lr      J, W
(1)    1440 : 49                         lr      A, J
(1)    1441 : 15                         sl      4
(1)    1442 : 13                         sl      1
(1)    1443 : 13                         sl      1               ; sign=carry << 6
(1)    1444 : 59                         lr      J, A
(1)    1445 : 40                         lr      A, 0
(1)    1446 : 22 00                      oi      0
(1)    1448 : 94 06                      bnz     ucmp16_cmp
(1)    144A : 41                         lr      A, 1
(1)    144B : 22 00                      oi      0
(1)    144D : 84 06                      bz      ucmp16_eq
(1)    144F :                    ucmp16_cmp:
(1)    144F : 49                         lr      A, J
(1)    1450 : 23 80                      xi      H'80'
(1)    1452 : 22 01                      oi      1               ; W.Z=0, W.S=~W.C
(1)    1454 :                    ucmp16_eq:     
(1)    1454 : 28 02 31                   pi      pop0
(1)    1457 : 28 02 3D                   pi      pop1
(1)    145A : 29 02 82                   jmp     return
(1)    145D :
(1)    145D :                    ;;; Unsigned division: divident / divisor = quotient ... reminder
(1)    145D :                    ;;; @praram 4:5 divident
(1)    145D :                    ;;; @praram 6:7 divisor
(1)    145D :                    ;;; @return 4:5 quotient
(1)    145D :                    ;;; @return 6:7 reminder
(1)    145D :                    ;;; @clobber 4 5 6 7 A
(1)    145D :                    udiv16:
(1)    145D : 28 02 24                   pi      pushQ           ; save Q
(1)    1460 : 28 02 0D                   pi      push1           ; save 1
(1)    1463 : 28 02 03                   pi      push0           ; save 0
(1)    1466 : 71                         lis     1
(1)    1467 : 50                         lr      0, A            ; bits=1
(1)    1468 : 46                         lr      A, 6
(1)    1469 : 22 00                      oi      0
(1)    146B : 94 1C                      bnz     udiv16_prep
(1)    146D : 47                         lr      A, 7
(1)    146E : 22 00                      oi      0
(1)    1470 : 94 17                      bnz     udiv16_prep
(1)    1472 : 28 02 31                   pi      pop0
(1)    1475 : 28 02 3D                   pi      pop1
(1)    1478 : 28 02 57                   pi      popQ
(1)    147B : 29 02 82                   jmp     return          ; divide by zero
(1)    147E :                    udiv16_prep_loop:
(1)    147E : 47                         lr      A, 7
(1)    147F : C7                         as      7
(1)    1480 : 57                         lr      7, A
(1)    1481 : 46                         lr      A, 6
(1)    1482 : 19                         lnk
(1)    1483 : C6                         as      6
(1)    1484 : 56                         lr      6, A            ; divisor <<= 1
(1)    1485 : 40                         lr      A, 0
(1)    1486 : 1F                         inc
(1)    1487 : 50                         lr      0, A            ; ++bits
(1)    1488 :                    udiv16_prep:
(1)    1488 : 46                         lr      A, 6
(1)    1489 : 22 00                      oi      0
(1)    148B : 81 F2                      bp      udiv16_prep_loop ; while msb(divisor) == 0
(1)    148D : 70                         clr
(1)    148E : 06                         lr      QU, A
(1)    148F : 07                         lr      QL, A           ; Q=quotient
(1)    1490 : 90 21                      br      udiv16_enter_loop
(1)    1492 :                    udiv16_loop:
(1)    1492 : 28 02 31                   pi      pop0            ; restore bits
(1)    1495 : 30                         ds      0               ; --bits
(1)    1496 : 84 3B                      bz      udiv16_return   ; while bits != 0
(1)    1498 : 70                         clr
(1)    1499 : 51                         lr      1, A            ; clear carry
(1)    149A : 46                         lr      A, 6
(1)    149B : 21 01                      ni      1
(1)    149D : 84 04                      bz      udiv16_sr_lsb
(1)    149F : 20 80                      li      H'80'
(1)    14A1 : 51                         lr      1, A            ; set carry
(1)    14A2 :                    udiv16_sr_lsb:
(1)    14A2 : 46                         lr      A, 6
(1)    14A3 : 12                         sr      1
(1)    14A4 : 56                         lr      6, A
(1)    14A5 : 47                         lr      A, 7
(1)    14A6 : 12                         sr      1
(1)    14A7 : E1                         xs      1               ; shift in carry
(1)    14A8 : 57                         lr      7, A            ; divisor >>= 1
(1)    14A9 : 03                         lr      A, QL
(1)    14AA : 51                         lr      1, A
(1)    14AB : C1                         as      1
(1)    14AC : 07                         lr      QL, A
(1)    14AD : 02                         lr      A, QU
(1)    14AE : 51                         lr      1, A
(1)    14AF : 19                         lnk
(1)    14B0 : C1                         as      1
(1)    14B1 : 06                         lr      QU, A           ; quotient <<= 1
(1)    14B2 :                    udiv16_enter_loop:
(1)    14B2 : 28 02 03                   pi      push0           ; save bits
(1)    14B5 : 28 02 65                   pi      call
(1)    14B8 : 14 28                      da      ucmp16          ; divident <=> divisor
(1)    14BA : 91 D7                      bm      udiv16_loop     ; branch if divident < divisor
(1)    14BC : 46                         lr      A, 6
(1)    14BD : 18                         com
(1)    14BE : 50                         lr      0, A
(1)    14BF : 47                         lr      A, 7
(1)    14C0 : 18                         com
(1)    14C1 : 1F                         inc
(1)    14C2 : 51                         lr      1, A
(1)    14C3 : 40                         lr      A, 0
(1)    14C4 : 19                         lnk
(1)    14C5 : 50                         lr      0, A            ; 0:1=-divisor
(1)    14C6 : 45                         lr      A, 5
(1)    14C7 : C1                         as      1
(1)    14C8 : 55                         lr      5, A
(1)    14C9 : 44                         lr      A, 4
(1)    14CA : 19                         lnk
(1)    14CB : C0                         as      0
(1)    14CC : 54                         lr      4, A            ; divident-=divisor
(1)    14CD : 03                         lr      A, QL
(1)    14CE : 1F                         inc
(1)    14CF : 07                         lr      QL, A           ; quotient |= 1
(1)    14D0 : 90 C1                      br      udiv16_loop
(1)    14D2 :                    udiv16_return:
(1)    14D2 : 44                         lr      A, 4
(1)    14D3 : 56                         lr      6, A
(1)    14D4 : 45                         lr      A, 5
(1)    14D5 : 57                         lr      7, A            ; 6:7=reminder
(1)    14D6 : 02                         lr      A, QU
(1)    14D7 : 54                         lr      4, A
(1)    14D8 : 03                         lr      A, QL
(1)    14D9 : 55                         lr      5, A            ; 4:5=quotient
(1)    14DA : 28 02 31                   pi      pop0            ; restore 0
(1)    14DD : 28 02 3D                   pi      pop1            ; restore 1
(1)    14E0 : 28 02 57                   pi      popQ            ; restore Q
(1)    14E3 : 29 02 82                   jmp     return
(1)    14E6 :
(1)    14E6 :                    ;;; Unsigned division: dividend /= divisor
(1)    14E6 :                    ;;; @praram @2: dividend
(1)    14E6 :                    ;;; @praram @3: divisor
(1)    14E6 :                    ;;; @clobber 4 5 6 7 A
(1)    14E6 :                    udivsi2:
(1)    14E6 : 42                         lr      A, 2
(1)    14E7 : 0B                         lr      IS, A
(1)    14E8 : 4D                         lr      A, I
(1)    14E9 : 54                         lr      4, A
(1)    14EA : 4C                         lr      A, S
(1)    14EB : 55                         lr      5, A            ; 4:5=divident
(1)    14EC : 43                         lr      A, 3
(1)    14ED : 0B                         lr      IS, A
(1)    14EE : 4D                         lr      A, I
(1)    14EF : 56                         lr      6, A
(1)    14F0 : 4C                         lr      A, S
(1)    14F1 : 57                         lr      7, A            ; 6:7=divisor
(1)    14F2 : 28 02 65                   pi      call
(1)    14F5 : 14 5D                      da      udiv16
(1)    14F7 : 42                         lr      A, 2
(1)    14F8 : 0B                         lr      IS, A
(1)    14F9 : 44                         lr      A, 4
(1)    14FA : 5D                         lr      I, A
(1)    14FB : 45                         lr      A, 5
(1)    14FC : 5C                         lr      S, A            ; @2=result
(1)    14FD : 29 02 82                   jmp     return
(1)    1500 :
(1)    1500 :
(1)    1500 :                    ;;; Signed division: divident /= divisor
(1)    1500 :                    ;;; @param @2: divident
(1)    1500 :                    ;;; @param @3: divisor
(1)    1500 :                    ;;; @clobber 4 5 6 7 A
(1)    1500 :                    divsi2:
(1)    1500 : 42                         lr      A, 2
(1)    1501 : 1F                         inc
(1)    1502 : 0B                         lr      IS, A           ; point LSB(@2)
(1)    1503 : 4E                         lr      A, D
(1)    1504 : 55                         lr      5, A
(1)    1505 : 4C                         lr      A, S
(1)    1506 : 54                         lr      4, A            ; 4:5=divident
(1)    1507 : 22 00                      oi      0
(1)    1509 : 81 0A                      bp      divsi2_divisor
(1)    150B : 18                         com
(1)    150C : 54                         lr      4, A            ; MSB(~divident)
(1)    150D : 45                         lr      A, 5
(1)    150E : 18                         com
(1)    150F : 1F                         inc
(1)    1510 : 55                         lr      5, A            ; LSB(-divident)
(1)    1511 : 44                         lr      A, 4
(1)    1512 : 19                         lnk
(1)    1513 : 54                         lr      4, A            ; MSB(-divident)
(1)    1514 :                    divsi2_divisor:
(1)    1514 : 43                         lr      A, 3
(1)    1515 : 1F                         inc
(1)    1516 : 0B                         lr      IS, A           ; point LSB(@3)
(1)    1517 : 4E                         lr      A, D
(1)    1518 : 57                         lr      7, A
(1)    1519 : 4C                         lr      A, S
(1)    151A : 56                         lr      6, A
(1)    151B : 22 00                      oi      0
(1)    151D : 81 0A                      bp      divsi2_divide
(1)    151F : 18                         com
(1)    1520 : 56                         lr      6, A            ; MSB(~divisor)
(1)    1521 : 47                         lr      A, 7
(1)    1522 : 18                         com
(1)    1523 : 1F                         inc
(1)    1524 : 57                         lr      7, A            ; LSB(-divisor)
(1)    1525 : 46                         lr      A, 6
(1)    1526 : 19                         lnk
(1)    1527 : 56                         lr      6, A            ; MSB(-divisor)
(1)    1528 :                    divsi2_divide:
(1)    1528 : 28 02 65                   pi      call
(1)    152B : 14 5D                      da      udiv16
(1)    152D : 43                         lr      A, 3
(1)    152E : 0B                         lr      IS, A
(1)    152F : 4C                         lr      A, S
(1)    1530 : 56                         lr      6, A            ; MSB(divisor)
(1)    1531 : 42                         lr      A, 2
(1)    1532 : 0B                         lr      IS, A
(1)    1533 : 4C                         lr      A, S            ; MSB(divident)
(1)    1534 : E6                         xs      6               ; MSB(divident^divisor)
(1)    1535 : 81 0B                      bp      divsi2_store
(1)    1537 : 44                         lr      A, 4
(1)    1538 : 18                         com
(1)    1539 : 54                         lr      4, A            ; MSB(~result)
(1)    153A : 45                         lr      A, 5
(1)    153B : 18                         com
(1)    153C : 1F                         inc
(1)    153D : 55                         lr      5, A            ; LSB(-result)
(1)    153E : 44                         lr      A, 4
(1)    153F : 19                         lnk
(1)    1540 : 54                         lr      4, A            ; MSB(-result)
(1)    1541 :                    divsi2_store:
(1)    1541 : 44                         lr      A, 4
(1)    1542 : 5D                         lr      I, A
(1)    1543 : 45                         lr      A, 5
(1)    1544 : 5C                         lr      S, A            ; @2=result
(1)    1545 : 29 02 82                   jmp     return
(1)    1548 :
(1)    1548 :                    ;;; Local Variables:
(1)    1548 :                    ;;; mode: asm
(1)    1548 :                    ;;; End:
(1)    1548 :                    ;;; vim: set ft=asm et ts=4 sw=4:
       1548 :
       1548 :                            end
