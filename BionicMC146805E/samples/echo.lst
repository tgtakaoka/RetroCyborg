          0 :                            cpu     6805
          0 :                            include "mc6805.inc"
(1)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :
(1)       0 :                    ;;; MC6805
(1)       0 :                    ;;; Condition Code Register (CC)
(1)       0 : =1                 CC_CARRY      equ  %00000001   ; set to 1 if carry occurred
(1)       0 : =2                 CC_ZERO       equ  %00000010   ; set to 1 if result is zero
(1)       0 : =4                 CC_NEGATIVE   equ  %00000100   ; set to 1 if result is negative
(1)       0 : =8                 CC_IRQ        equ  %00001000   ; if 1, IRQ is masked
(1)       0 : =10                CC_HALF_CARRY equ  %00010000   ; if 1, decimal carry from least digit occurred
(1)       0 :
(1)       0 :                    ;;; Internal Register Area
(1)       0 : =0                 PORTA:  equ     $00          ; $00: Port A Data Register
(1)       0 : =1                 PORTB:  equ     $01          ; $01: Port B Data Register
(1)       0 : =4                 DDRA:   equ     $04          ; $04: Port A Data Direction Register
(1)       0 : =5                 DDRB:   equ     $05          ; $05: Port B Data Direction Register
(1)       0 : =8                 TDR:    equ     $08          ; $08: Timer Data Register
(1)       0 : =9                 TCR:    equ     $09          ; $09: Timer Control Register
(1)       0 :
(1)       0 :                    ;;; Port 2 Data Register
(1)       0 :
(1)       0 :                    ;;; Timer Control Register
(1)       0 : =7                 TCR_SCALER_gm:  equ     %00000111 ; Prescaler
(1)       0 : =0                 TCR_DIV1_gc:    equ     %00000000 ; - 1/1
(1)       0 : =1                 TCR_DIV2_gc:    equ     %00000001 ; - 1/2
(1)       0 : =2                 TCR_DIV4_gc:    equ     %00000010 ; - 1/4
(1)       0 : =3                 TCR_DIV8_gc:    equ     %00000011 ; - 1/8
(1)       0 : =4                 TCR_DIV16_gc:   equ     %00000100 ; - 1/16
(1)       0 : =5                 TCR_DIV32_gc:   equ     %00000101 ; - 1/32
(1)       0 : =6                 TCR_DIV64_gc:   equ     %00000110 ; - 1/64
(1)       0 : =7                 TCR_DIV128_gc:  equ     %00000111 ; - 1/128
(1)       0 : =18                TCR_CS_gm:      equ     %00011000 ; Timer clock source
(1)       0 : =0                 TCR_AS_gc:      equ     %00000000 ; - Internal Clock (AS)
(1)       0 : =8                 TCR_AS_AND_gc:  equ     %00001000 ; - Internal Clock (AS) AND TIMER input
(1)       0 : =10                TCR_DISABLE_gc: equ     %00010000 ; - Timer input is disabled
(1)       0 : =18                TCR_TIMER_gc:   equ     %00011000 ; - TIMER input
(1)       0 : =20                TCR_TOF_bm:     equ     %00100000 ; Timer Overflow Flag
(1)       0 : =40                TCR_IM_bm:      equ     %01000000 ; Timer interrupt mask
(1)       0 : =80                TCR_IF_bm:      equ     %10000000 ; Timer interrupt request flag
(1)       0 :
(1)       0 :                    ;;; Vector
(1)       0 : =1FFA              VEC_IRQ:        equ     $1FFA  ; $1FFA: Maskable Interrupt Request
(1)       0 : =1FFC              VEC_SWI:        equ     $1FFC  ; $1FFC: Software Interrupt
(1)       0 : =1FFE              VEC_RESET:      equ     $1FFE  ; $1FFE: Reset
          0 :
          0 :                    ;;; MC6850 Asynchronous Communication Interface Adapter
          0 : =17F8              ACIA:   equ     $17F8
          0 :                            include "mc6850.inc"
(1)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :
(1)       0 :                    ;;; MC6850
(1)       0 :                    ;;; Asynchronous Communication Interface Adapter
(1)       0 :
(1)       0 :                    ;;; Control register
(1)       0 : =17F8              ACIA_control:   equ     ACIA+0
(1)       0 :                            ;; Counter Divider Select Bits
(1)       0 : =3                 CDS_gm:         equ     %11    ; Group mask
(1)       0 : =0                 CDS_DIV1_gc:    equ     %00000000 ; /1
(1)       0 : =1                 CDS_DIV16_gc:   equ     %00000001 ; /16
(1)       0 : =2                 CDS_DIV64_gc:   equ     %00000010 ; /64
(1)       0 : =3                 CDS_RESET_gc:   equ     %00000011 ; Master Reset
(1)       0 :                            ;; Word Select Bits
(1)       0 : =1C                WSB_gm:         equ     %00011100 ; Group mask
(1)       0 : =0                 WSB_7E2_gc:     equ     %00000000 ; 7 Bits + Even Parity + 2 Stop Bits
(1)       0 : =4                 WSB_7O2_gc:     equ     %00000100 ; 7 bits + Odd Parity  + 2 Stop Bits
(1)       0 : =8                 WSB_7E1_gc:     equ     %00001000 ; 7 bits + Even Parity + 1 Stop Bits
(1)       0 : =C                 WSB_7O1_gc:     equ     %00001100 ; 7 bits + Odd Parity  + 1 Stop Bits
(1)       0 : =10                WSB_8N2_gc:     equ     %00010000 ; 8 bits + No Parity   + 2 Stop Bits
(1)       0 : =14                WSB_8N1_gc:     equ     %00010100 ; 8 bits + No Parity   + 1 Stop Bits
(1)       0 : =18                WSB_8E1_gc:     equ     %00011000 ; 8 bits + Even Parity + 1 Stop Bits
(1)       0 : =1C                WSB_8O1_gc:     equ     %00011100 ; 8 bits + Odd Parity  + 1 Stop Bits
(1)       0 :                            ;; Transmit Control Bits
(1)       0 : =60                TCB_gm:         equ     %01100000 ; Group mask
(1)       0 : =0                 TCB_DI_gc:      equ     %00000000 ; RTS=Low,  Tx Interrupt Disabled
(1)       0 : =20                TCB_EI_gc:      equ     %00100000 ; RTS=Low,  Tx Interrupt Enabled
(1)       0 : =40                TCB_RTS_gc:     equ     %01000000 ; RTS=High, Tx Interrupt Disabled
(1)       0 : =60                TCB_BREAK_gc:   equ     %01100000 ; RTS=Low,  Tx Interrupt Disabled
(1)       0 :                                                      ; Transmit Break Level
(1)       0 : =80                RIEB_bm:        equ     %10000000 ; Receive Interrupt Enable Bit mask
(1)       0 :
(1)       0 :                    ;;; Status register
(1)       0 : =17F8              ACIA_status:    equ     ACIA+0
(1)       0 : =1                 RDRF_bm:        equ     %00000001 ; Receive Data Register Full
(1)       0 : =2                 TDRE_bm:        equ     %00000010 ; Transmit Data Register Empty
(1)       0 : =4                 DCDF_bm:        equ     %00000100 ; Data Carrier Detect Flag
(1)       0 : =8                 CTSF_bm:        equ     %00001000 ; Clear To Send Flag
(1)       0 : =10                FERR_bm:        equ     %00010000 ; Frame Error Flag
(1)       0 : =20                OVRN_bm:        equ     %00100000 ; Receiver Overrun Flag
(1)       0 : =40                PERR_bm:        equ     %01000000 ; Parity Error Flag
(1)       0 : =80                IRQF_bm:        equ     %10000000 ; Interrupt Request Flag
(1)       0 :
(1)       0 :                    ;;; Data register
(1)       0 : =17F9              ACIA_data:      equ     ACIA+1          ; Data register
          0 :
         20 :                            org     $20
         20 :                    save_a: rmb     1
         21 :
        100 :                            org     $0100
        100 :                    initialize:
        100 : A6 03                      lda     #CDS_RESET_gc   ; Master reset
        102 : C7 17 F8                   sta     ACIA_control
        105 : A6 14                      lda     #WSB_8N1_gc     ; 8 bits + No Parity + 1 Stop Bits
        107 :                                                    ; Transmit, Receive interrupts disabled
        107 : C7 17 F8                   sta     ACIA_control
        10A :
        10A : AD 0A              loop:   bsr     getchar
        10C : AD 13              echo:   bsr     putchar
        10E : A1 0D                      cmp     #$0D            ; Carriage Return
        110 : 26 F8                      bne     loop
        112 : A6 0A                      lda     #$0A            ; Newline
        114 : 20 F6                      bra     echo
        116 :
        116 :                    getchar:
        116 : C6 17 F8                   lda     ACIA_status
        119 : A5 01                      bit     #RDRF_bm
        11B : 27 F9                      beq     getchar
        11D :                    receive_data:
        11D : C6 17 F9                   lda     ACIA_data
        120 : 81                         rts
        121 :
        121 :                    putchar:
        121 : B7 20                      sta     save_a
        123 :                    transmit_loop:
        123 : C6 17 F8                   lda     ACIA_status
        126 : A5 02                      bit     #TDRE_bm
        128 : 27 F9                      beq     transmit_loop
        12A :                    transmit_data:
        12A : B6 20                      lda     save_a
        12C : C7 17 F9                   sta     ACIA_data
        12F : 81                         rts
        130 :
       1FFE :                            org     VEC_RESET
       1FFE : 01 00                      fdb     initialize
