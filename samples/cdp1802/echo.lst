          0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
          0 :                            cpu     1802
          0 :                            option  "smart-branch", "on"
          0 :                            include "cdp1802.inc"
(1)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :
(1)       0 :                    ;;; CDP1802 register alias
(1)       0 : =0                 R0:     equ     0
(1)       0 : =1                 R1:     equ     1
(1)       0 : =2                 R2:     equ     2
(1)       0 : =3                 R3:     equ     3
(1)       0 : =4                 R4:     equ     4
(1)       0 : =5                 R5:     equ     5
(1)       0 : =6                 R6:     equ     6
(1)       0 : =7                 R7:     equ     7
(1)       0 : =8                 R8:     equ     8
(1)       0 : =9                 R9:     equ     9
(1)       0 : =A                 R10:    equ     10
(1)       0 : =B                 R11:    equ     11
(1)       0 : =C                 R12:    equ     12
(1)       0 : =D                 R13:    equ     13
(1)       0 : =E                 R14:    equ     14
(1)       0 : =F                 R15:    equ     15
(1)       0 :
(1)       0 :                    ;;; Transfer locations
(1)       0 : =0                 ORG_RESET:      equ     0000H   ; Reset transfer location
          0 :
          0 :                    ;;; MC6850 Asynchronous Communication Interface Adapter
          0 : =DF00              ACIA:   equ     X'DF00'
          0 :                            include "mc6850.inc"
(1)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :
(1)       0 :                    ;;; MC6850
(1)       0 :                    ;;; Asynchronous Communication Interface Adapter
(1)       0 :
(1)       0 :                    ;;; Control register
(1)       0 : =DF00              ACIA_control:   equ     ACIA+0
(1)       0 :                            ;; Counter Divider Select Bits
(1)       0 : =3                 CDS_gm:         equ     11b    ; Group mask
(1)       0 : =0                 CDS_DIV1_gc:    equ     00000000B ; /1
(1)       0 : =1                 CDS_DIV16_gc:   equ     00000001B ; /16
(1)       0 : =2                 CDS_DIV64_gc:   equ     00000010B ; /64
(1)       0 : =3                 CDS_RESET_gc:   equ     00000011B ; Master Reset
(1)       0 :                            ;; Word Select Bits
(1)       0 : =1C                WSB_gm:         equ     00011100B ; Group mask
(1)       0 : =0                 WSB_7E2_gc:     equ     00000000B ; 7 Bits + Even Parity + 2 Stop Bits
(1)       0 : =4                 WSB_7O2_gc:     equ     00000100B ; 7 bits + Odd Parity  + 2 Stop Bits
(1)       0 : =8                 WSB_7E1_gc:     equ     00001000B ; 7 bits + Even Parity + 1 Stop Bits
(1)       0 : =C                 WSB_7O1_gc:     equ     00001100B ; 7 bits + Odd Parity  + 1 Stop Bits
(1)       0 : =10                WSB_8N2_gc:     equ     00010000B ; 8 bits + No Parity   + 2 Stop Bits
(1)       0 : =14                WSB_8N1_gc:     equ     00010100B ; 8 bits + No Parity   + 1 Stop Bits
(1)       0 : =18                WSB_8E1_gc:     equ     00011000B ; 8 bits + Even Parity + 1 Stop Bits
(1)       0 : =1C                WSB_8O1_gc:     equ     00011100B ; 8 bits + Odd Parity  + 1 Stop Bits
(1)       0 :                            ;; Transmit Control Bits
(1)       0 : =60                TCB_gm:         equ     01100000B ; Group mask
(1)       0 : =0                 TCB_DI_gc:      equ     00000000B ; RTS=Low,  Tx Interrupt Disabled
(1)       0 : =20                TCB_EI_gc:      equ     00100000B ; RTS=Low,  Tx Interrupt Enabled
(1)       0 : =40                TCB_RTS_gc:     equ     01000000B ; RTS=High, Tx Interrupt Disabled
(1)       0 : =60                TCB_BREAK_gc:   equ     01100000B ; RTS=Low,  Tx Interrupt Disabled
(1)       0 :                                                      ; Transmit Break Level
(1)       0 : =80                RIEB_bm:        equ     10000000B ; Receive Interrupt Enable Bit mask
(1)       0 :
(1)       0 :                    ;;; Status register
(1)       0 : =DF00              ACIA_status:    equ     ACIA+0
(1)       0 : =1                 RDRF_bm:        equ     00000001B ; Receive Data Register Full
(1)       0 : =2                 TDRE_bm:        equ     00000010B ; Transmit Data Register Empty
(1)       0 : =4                 DCDF_bm:        equ     00000100B ; Data Carrier Detect Flag
(1)       0 : =8                 CTSF_bm:        equ     00001000B ; Clear To Send Flag
(1)       0 : =10                FERR_bm:        equ     00010000B ; Frame Error Flag
(1)       0 : =20                OVRN_bm:        equ     00100000B ; Receiver Overrun Flag
(1)       0 : =40                PERR_bm:        equ     01000000B ; Parity Error Flag
(1)       0 : =80                IRQF_bm:        equ     10000000B ; Interrupt Request Flag
(1)       0 :
(1)       0 :                    ;;; Data register
(1)       0 : =DF01              ACIA_data:      equ     ACIA+1          ; Data register
          0 :
        100 :                            org     X'0100'
        100 :                    main:
        100 : F8 DF                      ldi     A.1(ACIA)
        102 : B8                         phi     R8
        103 : F8 00                      ldi     A.0(ACIA)
        105 : A8                         plo     R8              ; R8=ACIA
        106 : F8 03                      ldi     CDS_RESET_gc    ; Master reset
        108 : 58                         str     R8              ; ACIA_control
        109 : F8 14                      ldi     WSB_8N1_gc      ; 8 bits + No Parity + 1 Stop Bits
        10B :                                                    ; Transmit, Receive interrupts disabled
        10B : 58                         str     R8              ; ACIA_control
        10C :
        10C :                    receive_loop:
        10C : 08                         ldn     R8              ; ACIA_status
        10D : FA 01                      ani     RDRF_bm
        10F : 32 0C                      bz      receive_loop
        111 :                    receive_data:
        111 : 18                         inc     R8              ; R8=ACIA_data
        112 : 08                         ldn     R8              ; d=char
        113 : C2 00 09                   bz      halt_to_system
        116 :                    transmit:
        116 : 28                         dec     R8              ; R8=ACIA_status
        117 : A7                         plo     R7              ; R7.0=char
        118 :                    transmit_loop:
        118 : 08                         ldn     R8              ; ACIA_status
        119 : FA 02                      ani     TDRE_bm
        11B : 32 18                      bz      transmit_loop
        11D :                    transmit_data:
        11D : 87                         glo     R7
        11E : 18                         inc     R8              ; R8=ACIA_data
        11F : 58                         str     R8              ; ACIA_data
        120 : 28                         dec     R8              ; R8=ACIA_status
        121 : FB 0D                      xri     X'0D'
        123 : 3A 0C                      bnz     receive_loop
        125 : F8 0A                      ldi     X'0A'
        127 : A7                         plo     R7              ; R7.0=char
        128 : 30 18                      br      transmit_loop
        12A :
          0 :                            org     ORG_RESET
          0 : 71                         dis                     ; IE=0
          1 : 00                         dc      X'00'           ; X:P=0:0
          2 : F8 01                      ldi     A.1(main)
          4 : B3                         phi     R3
          5 : F8 00                      ldi     A.0(main)
          7 : A3                         plo     R3
          8 : D3                         sep     R3               ; jump to main with R3 as PC
          9 :                    halt_to_system:
          9 : 00                         idl
