          0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
          0 :                            cpu     f3850
          0 :
          0 :                    ;;; i8251 Universal Synchronous/Asynchronous Receiver/Transmitter
          0 : =F0                USART:  equ     0F0H
          0 : =F0                USARTD: equ     USART+0         ; Data register
          0 : =F1                USARTS: equ     USART+1         ; Status register
          0 : =F1                USARTC: equ     USART+1         ; Control register
          0 :                            include "i8251.inc"
(1)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :
(1)       0 :                    ;;; i8251 USART device emulator.
(1)       0 : =6                 MODE_STOP_gp:   equ     6
(1)       0 : =C0                MODE_STOP_gm:   equ     11000000B
(1)       0 : =40                MODE_STOP1_gc:  equ     (1 << MODE_STOP_gp)
(1)       0 : =80                MODE_STOP15_gc: equ     (2 << MODE_STOP_gp)
(1)       0 : =C0                MODE_STOP2_gc:  equ     (3 << MODE_STOP_gp)
(1)       0 : =20                MODE_EVEN_bm:   equ     00100000B
(1)       0 : =10                MODE_PARITY_bm: equ     00010000B
(1)       0 : =2                 MODE_LEN_gp:    equ     2
(1)       0 : =C                 MODE_LEN_gm:    equ     00001100B
(1)       0 : =0                 MODE_LEN5_gc:   equ     (0 << MODE_LEN_gp)
(1)       0 : =4                 MODE_LEN6_gc:   equ     (1 << MODE_LEN_gp)
(1)       0 : =8                 MODE_LEN7_gc:   equ     (2 << MODE_LEN_gp)
(1)       0 : =C                 MODE_LEN8_gc:   equ     (3 << MODE_LEN_gp)
(1)       0 : =0                 MODE_BAUD_gp:   equ     0
(1)       0 : =3                 MODE_BAUD_gm:   equ     00000011B
(1)       0 : =1                 MODE_BAUD_X1:   equ     (1 << MODE_BAUD_gp)
(1)       0 : =2                 MODE_BAUD_X16:  equ (2 << MODE_BAUD_gp)
(1)       0 : =3                 MODE_BAUD_X64:  equ (3 << MODE_BAUD_gp)
(1)       0 :                    ;;; Bit Definition of command register
(1)       0 : =80                CMD_EH_bm:      equ     10000000B   ; Enter hunt mode
(1)       0 : =40                CMD_IR_bm:      equ     01000000B   ; Internal Reset
(1)       0 : =20                CMD_RTS_bm:     equ     00100000B   ; Request To Send
(1)       0 : =10                CMD_ER_bm:      equ     00010000B   ; Error Reset
(1)       0 : =8                 CMD_SBRK_bm:    equ     00001000B   ; Send Break
(1)       0 : =4                 CMD_RxEN_bm:    equ     00000100B   ; Receive Enable
(1)       0 : =2                 CMD_DTR_bm:     equ     00000010B   ; Data Terminal Ready
(1)       0 : =1                 CMD_TxEN_bm:    equ     00000001B   ; Transmit enable
(1)       0 :
(1)       0 :                    ;;; Bit definition of status register
(1)       0 : =80                ST_DSR_bm:      equ     10000000B   ; Data Set Ready
(1)       0 : =40                ST_BRK_bm:      equ     01000000B   ; BREAK detected
(1)       0 : =20                ST_FE_bm:       equ     00100000B   ; Framing Error
(1)       0 : =10                ST_OE_bm:       equ     00010000B   ; Iverrun Error
(1)       0 : =8                 ST_PE_bm:       equ     00001000B   ; Parity Error
(1)       0 : =4                 ST_TxEMPTY_bm:  equ     00000100B   ; Transmitter empty
(1)       0 : =2                 ST_RxRDY_bm:    equ     00000010B   ; Receiver ready
(1)       0 : =1                 ST_TxRDY_bm:    equ     00000001B   ; Transmitter ready
          0 :
          0 :                            org     0
          0 : 29 01 00                   jmp     init_usart
          3 :
        100 :                            org     0100H
        100 :                    init_usart:
        100 : 70                         lis     0
        101 : 27 F1                      out     USARTC
        103 : 27 F1                      out     USARTC
        105 : 27 F1                      out     USARTC          ; safest way to sync mode
        107 :                    ;;; reset
        107 : 20 40                      li      CMD_IR_bm
        109 : 27 F1                      out     USARTC
        10B : 2B                         nop
        10C : 2B                         nop
        10D :                    ;;;  async 1stop 8data x16
        10D : 20 4E                      li      MODE_STOP1_gc|MODE_LEN8_gc|MODE_BAUD_X16
        10F : 27 F1                      out     USARTC
        111 : 2B                         nop
        112 : 2B                         nop
        113 :                    ;;;  RTS/DTR, error reset, Rx enable, Tx enable
        113 : 20 37                      li      CMD_RTS_bm|CMD_DTR_bm|CMD_ER_bm|CMD_RxEN_bm|CMD_TxEN_bm
        115 : 27 F1                      out     USARTC
        117 :
        117 : 70                         lis     0
        118 :                    loop:   
        118 : 0B                         lr      is,a
        119 : 5D                         lr      i,a
        11A : 1F                         inc
        11B : 8F FD                      br7     $-2
        11D : 5D                         lr      i,a
        11E : 0A                         lr      a,is
        11F : 24 08                      ai      8
        121 : 25 40                      ci      0x40
        123 : 94 F4                      bnz     loop
        125 :
        125 :                    receive_loop:
        125 : 26 F1                      in      USARTS
        127 : 21 02                      ni      ST_RxRDY_bm
        129 : 84 FB                      bz      receive_loop
        12B :                    receive_data:
        12B : 26 F0                      in      USARTD
        12D : 50                         lr      0, A
        12E : 94 02                      bnz     transmit_loop
        130 : 2F                         dc      H'2F'
        131 :                    transmit_loop:
        131 : 26 F1                      in      USARTS
        133 : 21 01                      ni      ST_TxRDY_bm
        135 : 84 FB                      bz      transmit_loop
        137 :                    transmit_data:
        137 : 40                         lr      A, 0
        138 : 27 F0                      out     USARTD
        13A : 25 0D                      ci      H'0D'
        13C : 94 E8                      bnz     receive_loop
        13E : 7A                         lis     H'0A'
        13F : 50                         lr      0, A
        140 : 90 F0                      br      transmit_loop
