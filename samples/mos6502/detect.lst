          0 :                    ;;;
          0 :                    ;;; A new way to distinguish 6502 variants in software
          0 :                    ;;; http://forum.6502.org/viewtopic.php?f=2&t=5931
          0 :                    ;;;
          0 :                            cpu     65c02
          0 :                            .include "mos6502.inc"
(1)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :
(1)       0 :                    ;;; MOS6502
(1)       0 :                    ;;; Processor Status Register P
(1)       0 : =1                 P_CARRY         =       %00000001   ; set to 1 if carry occurred
(1)       0 : =2                 P_ZERO          =       %00000010   ; set to 1 if result is zero
(1)       0 : =4                 P_IRQ           =       %00000100   ; if 1, IRQ is disabled
(1)       0 : =8                 P_DECIMAL       =       %00001000   ; if 1, decimal mode
(1)       0 : =10                P_BRK           =       %00010000   ; if 1, BRK command
(1)       0 : =2                 P_OVERFLOW      =       %00000010   ; set to 1 if overflow occurred
(1)       0 : =8                 P_NEGATIVE      =       %00001000   ; set to 1 if result is negative
(1)       0 :
(1)       0 :                    ;;; Vector
(1)       0 : =FFFA              VEC_NMI         =       $FFFA  ; $FFFA: Non Maskable Interrupt
(1)       0 : =FFFC              VEC_RESET       =       $FFFC  ; $FFFE: Reset
(1)       0 : =FFFE              VEC_IRQ         =       $FFFE  ; $FFFE: Interrupt Request and BRK command
          0 :
       1000 :                            *=     $1000
       1000 :                    detect:
       1000 : A9 00                      lda     #0
       1002 : 85 84                      sta     $84
       1004 : 85 85                      sta     $85
       1006 : A9 1D                      lda     #'N'^'S'        ; $1D
       1008 : 85 83                      sta     $83
       100A : A9 6B                      lda     #'S'^'8'
       100C : 85 1D                      sta     $1D
       100E : A9 4E                      lda     #$4E            ; 'N'
       1010 :                            ;; 6502:   lsr $83, eor $83
       1010 :                            ;; 65SC02: nop, nop
       1010 :                            ;; 65C02:  rmb4 $83
       1010 :                            ;; 65816:  eor [$83]
       1010 : 47 83                      rmb4    $83
       1012 : 45 83                      eor     $83
       1014 :                            ;; 6502:   A='N'
       1014 :                            ;; 65SC02: A='S'
       1014 :                            ;; 65C02:  A='C'
       1014 :                            ;; 65816:  A='8'
       1014 : 4C 14 10                   jmp     *
       1017 :
       FFFC :                            *=      VEC_RESET
       FFFC : 00 10                      .word   detect
