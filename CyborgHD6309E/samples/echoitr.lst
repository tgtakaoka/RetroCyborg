 AS V1.42 Beta [Bld 204] - Source File echoitr.asm - Page 1 - 11/06/2021 16:32:45


          0 :                             cpu     6809
          0 :                             include "mc6809.inc"
(1)       0 :                     ;;; Condition Code Register (CC)
(1)       0 : =$1                 CC_CARRY      equ  %00000001   ; set to 1 if carry occurred
(1)       0 : =$2                 CC_OVERFLOW   equ  %00000010   ; set to 1 if overflow occurred
(1)       0 : =$4                 CC_ZERO       equ  %00000100   ; set to 1 if result is zero
(1)       0 : =$8                 CC_NEGATIVE   equ  %00001000   ; set to 1 if result is negative
(1)       0 : =$10                CC_IRQ        equ  %00010000   ; if 1, IRQ is masked
(1)       0 : =$20                CC_HALF_CARRY equ  %00100000   ; if 1, decimal carry from least digit occurred
(1)       0 : =$40                CC_FIRQ       equ  %01000000   ; if 1, FIRQ is masked
(1)       0 : =$80                CC_ENTIRE     equ  %10000000   ; set to 1 if entire registers are pushed
(1)       0 :                     
          0 :                     
          0 :                     ;;; MC6850 Asynchronous Communication Interface Adapter
          0 : =$DF00              ACIA:   equ     $DF00
          0 :                             include "mc6850.inc"
(1)       0 :                     ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :                     
(1)       0 :                     ;;; MC6850
(1)       0 :                     ;;; Asynchronous Communication Interface Adapter
(1)       0 :                     
(1)       0 :                     ;;; Control register
(1)       0 : =$DF00              ACIA_control:   equ     ACIA+0
(1)       0 :                             ;; Counter Divider Select Bits
(1)       0 : =$3                 CDS_gm:         equ     %11    ; Group mask
(1)       0 : =$0                 CDS_DIV1_gc:    equ     %00000000 ; /1
(1)       0 : =$1                 CDS_DIV16_gc:   equ     %00000001 ; /16
(1)       0 : =$2                 CDS_DIV64_gc:   equ     %00000010 ; /64
(1)       0 : =$3                 CDS_RESET_gc:   equ     %00000011 ; Master Reset
(1)       0 :                             ;; Word Select Bits
(1)       0 : =$1C                WSB_gm:         equ     %00011100 ; Group mask
(1)       0 : =$0                 WSB_7E2_gc:     equ     %00000000 ; 7 Bits + Even Parity + 2 Stop Bits
(1)       0 : =$4                 WSB_7O2_gc:     equ     %00000100 ; 7 bits + Odd Parity  + 2 Stop Bits
(1)       0 : =$8                 WSB_7E1_gc:     equ     %00001000 ; 7 bits + Even Parity + 1 Stop Bits
(1)       0 : =$C                 WSB_7O1_gc:     equ     %00001100 ; 7 bits + Odd Parity  + 1 Stop Bits
(1)       0 : =$10                WSB_8N2_gc:     equ     %00010000 ; 8 bits + No Parity   + 2 Stop Bits
(1)       0 : =$14                WSB_8N1_gc:     equ     %00010100 ; 8 bits + No Parity   + 1 Stop Bits
(1)       0 : =$18                WSB_8E1_gc:     equ     %00011000 ; 8 bits + Even Parity + 1 Stop Bits
(1)       0 : =$1C                WSB_8O1_gc:     equ     %00011100 ; 8 bits + Odd Parity  + 1 Stop Bits
(1)       0 :                             ;; Transmit Control Bits
(1)       0 : =$60                TCB_gm:         equ     %01100000 ; Group mask
(1)       0 : =$0                 TCB_DI_gc:      equ     %00000000 ; RTS=Low,  Tx Interrupt Disabled
(1)       0 : =$20                TCB_EI_gc:      equ     %00100000 ; RTS=Low,  Tx Interrupt Enabled
(1)       0 : =$40                TCB_RTS_gc:     equ     %01000000 ; RTS=High, Tx Interrupt Disabled
(1)       0 : =$60                TCB_BREAK_gc:   equ     %01100000 ; RTS=Low,  Tx Interrupt Disabled
(1)       0 :                                                       ; Transmit Break Level
(1)       0 : =$80                RIEB_bm:        equ     %10000000 ; Receive Interrupt Enable Bit mask
(1)       0 :                     
(1)       0 :                     ;;; Status register
(1)       0 : =$DF00              ACIA_status:    equ     ACIA+0
(1)       0 : =$1                 RDRF_bm:        equ     %00000001 ; Receive Data Register Full
(1)       0 : =$2                 TDRE_bm:        equ     %00000010 ; Transmit Data Register Empty
(1)       0 : =$4                 DCDF_bm:        equ     %00000100 ; Data Carrier Detect Flag
(1)       0 : =$8                 CTSF_bm:        equ     %00001000 ; Clear To Send Flag
(1)       0 : =$10                FERR_bm:        equ     %00010000 ; Frame Error Flag
(1)       0 : =$20                OVRN_bm:        equ     %00100000 ; Receiver Overrun Flag
(1)       0 : =$40                PERR_bm:        equ     %01000000 ; Parity Error Flag
(1)       0 : =$80                IRQF_bm:        equ     %10000000 ; Interrupt Request Flag
(1)       0 :                     
(1)       0 :                     ;;; Data register
 AS V1.42 Beta [Bld 204] - Source File echoitr.asm(mc6850.inc) - Page 2 - 11/06/2021 16:32:45


(1)       0 : =$DF01              ACIA_data:      equ     ACIA+1          ; Data register
(1)       0 :                     
          0 :                     
       2000 :                             org     $2000
       2000 :                     
       2000 : =$80                rx_queue_size:  equ     128
       2000 :                     rx_queue:       rmb     rx_queue_size
       2080 : =$80                tx_queue_size:  equ     128
       2080 :                     tx_queue:       rmb     tx_queue_size
       2100 : =$94                RX_INT_TX_NO:   equ     WSB_8N1_gc|RIEB_bm
       2100 : =$B4                RX_INT_TX_INT:  equ     WSB_8N1_gc|RIEB_bm|TCB_EI_gc
       2100 :                     tx_int_control: rmb     1
       2101 :                     
       1000 :                             org     $1000
       1000 : =$1000              stack:  equ     *
       1000 :                     
       1000 :                             org     $1000
       1000 :                     initialize:
       1000 : 10 CE 10 00                 lds     #stack
       1004 : 8E 20 00                    ldx     #rx_queue
       1007 : C6 80                       ldb     #rx_queue_size
       1009 : 17 00 AC                    lbsr    queue_init
       100C : 8E 20 80                    ldx     #tx_queue
       100F : C6 80                       ldb     #tx_queue_size
       1011 : 17 00 A4                    lbsr    queue_init
       1014 :                             ;; initialize ACIA
       1014 : 86 03                       lda     #CDS_RESET_gc   ; master reset
       1016 : B7 DF 00                    sta     ACIA_control
       1019 : 86 94                       lda     #RX_INT_TX_NO
       101B : B7 DF 00                    sta     ACIA_control
       101E : 7F 21 00                    clr     tx_int_control  ; disabl Tx interrupt
       1021 : 1C EF                       andcc   #~CC_IRQ        ; Clear IRQ mask
       1023 :                     
       1023 :                     receive_loop:
       1023 : 17 00 68                    lbsr    getchar
       1026 : 24 FB                       bcc     receive_loop
       1028 :                     echo_back:
       1028 : 1F 89                       tfr     a,b
       102A : 17 00 72                    lbsr    putchar         ; echo
       102D : 86 20                       lda     #$20            ; space
       102F : 17 00 6D                    lbsr    putchar
       1032 : 8D 14                       bsr     put_hex8        ; print in hex
       1034 : 86 20                       lda     #$20
       1036 : 17 00 66                    lbsr    putchar
       1039 : 8D 31                       bsr     put_bin8        ; print in binary
       103B : 17 00 02                    lbsr    newline
       103E : 20 E3                       bra     receive_loop
       1040 :                     
       1040 :                     ;;; Put newline
       1040 :                     ;;; @clobber A
       1040 :                     newline:
       1040 : 86 0D                       lda     #$0d
       1042 : 8D 5B                       bsr     putchar
       1044 : 86 0A                       lda     #$0a
       1046 : 20 57                       bra     putchar
       1048 :                     
       1048 :                     ;;; Print uint8_t in hex
       1048 :                     ;;; @param B uint8_t value to be printed in hex.
       1048 :                     ;;; @clobber A
       1048 :                     put_hex8:
 AS V1.42 Beta [Bld 204] - Source File echoitr.asm - Page 3 - 11/06/2021 16:32:45


       1048 : 86 30                       lda     #'0'
       104A : 17 00 52                    lbsr    putchar
       104D : 86 78                       lda     #'x'
       104F : 17 00 4D                    lbsr    putchar
       1052 : 1F 98                       tfr     b,a
       1054 : 44                          lsra
       1055 : 44                          lsra
       1056 : 44                          lsra
       1057 : 44                          lsra
       1058 : 8D 02                       bsr     put_hex4
       105A : 1F 98                       tfr     b,a
       105C :                     put_hex4:
       105C : 84 0F                       anda    #$0f
       105E : 81 0A                       cmpa    #10
       1060 : 25 05                       blo     put_hex8_dec
       1062 : 8B 37                       adda    #'A'-10
       1064 : 16 00 38                    lbra    putchar
       1067 :                     put_hex8_dec:
       1067 : 8B 30                       adda    #'0'
       1069 : 16 00 33                    lbra   putchar
       106C :                     
       106C :                     ;;; Print uint8_t in binary
       106C :                     ;;; @param B uint8_t value to be printed in binary.
       106C :                     ;;; @clobber A
       106C :                     put_bin8:
       106C : 34 04                       pshs    b
       106E : 86 30                       lda     #'0'
       1070 : 17 00 2C                    lbsr    putchar
       1073 : 86 62                       lda     #'b'
       1075 : 17 00 27                    lbsr    putchar
       1078 : 8D 05                       bsr     put_bin4
       107A : 58                          lslb
       107B : 8D 02                       bsr     put_bin4
       107D : 35 84                       puls    b,pc
       107F :                     put_bin4:
       107F : 8D 01                       bsr     put_bin2
       1081 : 58                          lslb
       1082 :                     put_bin2:
       1082 : 8D 01                       bsr     put_bin1
       1084 : 58                          lslb
       1085 :                     put_bin1:
       1085 : 86 30                       lda     #'0'
       1087 : 5D                          tstb                    ; chech MSB
       1088 : 2A 01                       bpl     put_bin0        ; MSB=0
       108A : 4C                          inca                    ; MSB=1
       108B :                     put_bin0:
       108B : 16 00 11                    lbra    putchar
       108E :                     
       108E :                     ;;; Get character
       108E :                     ;;; @return A
       108E :                     ;;; @return CC.C 0 if no character
       108E :                     getchar:
       108E : 1A 01                       orcc    #CC_CARRY       ; set carry
       1090 : 34 11                       pshs    x,cc
       1092 : 1A 10                       orcc    #CC_IRQ         ; disable IRQ
       1094 : 8E 20 00                    ldx     #rx_queue
       1097 : 8D 54                       bsr     queue_remove
       1099 : 25 02                       bcs     getchar_end
       109B : 6A E4                       dec     ,s              ; clear carry
       109D :                     getchar_end:
 AS V1.42 Beta [Bld 204] - Source File echoitr.asm - Page 4 - 11/06/2021 16:32:45


       109D : 35 91                       puls    cc,x,pc
       109F :                     
       109F :                     ;;; Put character
       109F :                     ;;; @param A
       109F :                     putchar:
       109F : 34 13                       pshs    x,a,cc
       10A1 : 1A 10                       orcc    #CC_IRQ         ; disable IRQ
       10A3 : 8E 20 80                    ldx     #tx_queue
       10A6 : 17 00 20                    lbsr    queue_add
       10A9 : 7D 21 00                    tst     tx_int_control
       10AC : 26 08                       bne     putchar_end
       10AE : 86 B4                       lda     #RX_INT_TX_INT  ; enable Tx interrupt
       10B0 : B7 21 00                    sta     tx_int_control
       10B3 : B7 DF 00                    sta     ACIA_control
       10B6 :                     putchar_end:
       10B6 : 35 93                       puls    cc,a,x,pc
       10B8 :                     
       10B8 :                             include "queue.inc"
(1)    10B8 :                     ;;; -*- mode: asm; mode: flying-spell; -*-
(1)    10B8 :                     
(1)    10B8 :                     ;;; [queue] queue structure
(1)    10B8 : =$0                 queue_len:	equ	0	; queue length
(1)    10B8 : =$1                 queue_size:	equ	1	; buffer size
(1)    10B8 : =$2                 queue_put:	equ	2	; queue put index
(1)    10B8 : =$3                 queue_get:	equ	3	; queue get index
(1)    10B8 : =$4                 queue_buf:	equ	4	; buffer start offset
(1)    10B8 :                     
(1)    10B8 :                     ;;; [queue] Initialize queue
(1)    10B8 :                     ;;; @param X queue work space pointer
(1)    10B8 :                     ;;; @param B queue work space size
(1)    10B8 :                     ;;; @clobber B
(1)    10B8 :                     queue_init:
(1)    10B8 : 34 16               	pshs	x,d
(1)    10BA : 4F                          clra
(1)    10BB :                     .clear_loop:
(1)    10BB : 6F 80               	clr	,x+
(1)    10BD : 83 00 01            	subd	#1
(1)    10C0 : 26 F9               	bne	.clear_loop
(1)    10C2 : 35 16               	puls	d,x
(1)    10C4 : C0 04               	subb	#queue_buf
(1)    10C6 : E7 01               	stb	queue_size,x
(1)    10C8 : 39                  	rts
(1)    10C9 :                     
(1)    10C9 :                     ;;; [queue] Add an element to queue
(1)    10C9 :                     ;;; @param X queue work space pointer
(1)    10C9 :                     ;;; @param A an element
(1)    10C9 :                     ;;; @return CC.C 0 if queue is full
(1)    10C9 :                     queue_add:
(1)    10C9 : 34 46               	pshs	u,b,a
(1)    10CB : E6 84               	ldb	queue_len,x
(1)    10CD : E1 01               	cmpb	queue_size,x
(1)    10CF : 25 02               	blo	.add_elem
(1)    10D1 : 35 C6               	puls	a,b,u,pc        ; carry is cleared
(1)    10D3 :                     .add_elem:
(1)    10D3 : 4F                  	clra
(1)    10D4 : E6 02               	ldb	queue_put,x	; 16 bits offset
(1)    10D6 : 33 04               	leau	queue_buf,x
(1)    10D8 : 33 CB               	leau	d,u
(1)    10DA : A6 E4               	lda	,s		; an element
(1)    10DC : A7 C4               	sta	,u
 AS V1.42 Beta [Bld 204] - Source File echoitr.asm(queue.inc) - Page 5 - 11/06/2021 16:32:45


(1)    10DE : 6C 84               	inc	queue_len,x
(1)    10E0 : 5C                  	incb
(1)    10E1 : E7 02               	stb	queue_put,x
(1)    10E3 : E1 01               	cmpb	queue_size,x
(1)    10E5 : 25 04               	blo	.return         ; carry is set
(1)    10E7 : 6F 02               	clr	queue_put,x
(1)    10E9 : 1A 01               	orcc	#1		; set carry
(1)    10EB :                     .return:
(1)    10EB : 35 C6               	puls	a,b,u,pc
(1)    10ED :                     
(1)    10ED :                     ;;; [queue] Remove an element from queue
(1)    10ED :                     ;;; @param X queue work space pointer
(1)    10ED :                     ;;; @return A an element
(1)    10ED :                     ;;; @return CC.C 0 if queue is empty
(1)    10ED :                     queue_remove:
(1)    10ED : 6D 84               	tst	queue_len,x
(1)    10EF : 26 03               	bne	.remove_elem
(1)    10F1 : 1C FE               	andcc	#~1		; clear carry
(1)    10F3 : 39                  	rts
(1)    10F4 :                     .remove_elem: 
(1)    10F4 : 34 44               	pshs	u,b
(1)    10F6 : 4F                  	clra
(1)    10F7 : E6 03               	ldb	queue_get,x	; 16 bits offset
(1)    10F9 : 33 04               	leau	queue_buf,x
(1)    10FB : A6 CB               	lda	d,u
(1)    10FD : 6A 84               	dec	queue_len,x
(1)    10FF : 5C                  	incb
(1)    1100 : E7 03               	stb	queue_get,x
(1)    1102 : E1 01               	cmpb	queue_size,x
(1)    1104 : 25 04               	blo	.return         ; carry is set
(1)    1106 : 6F 03               	clr	queue_get,x
(1)    1108 : 1A 01               	orcc	#1		; set carry
(1)    110A :                     .return:
(1)    110A : 35 C4                       puls	b,u,pc
(1)    110C :                             
(1)    110C :                     
       110C :                     
       110C :                     isr_irq:
       110C : F6 DF 00                    ldb     ACIA_status
       110F : C5 80                       bitb    #IRQF_bm
       1111 : 27 2B                       beq     isr_irq_return
       1113 :                     isr_irq_receive:
       1113 : C5 01                       bitb    #RDRF_bm
       1115 : 27 09                       beq     isr_irq_recv_end
       1117 : B6 DF 01                    lda     ACIA_data       ; receive character
       111A : 8E 20 00                    ldx     #rx_queue
       111D : 17 FF A9                    lbsr    queue_add
       1120 :                     isr_irq_recv_end:
       1120 :                     isr_irq_send:
       1120 : C5 02                       bitb    #TDRE_bm
       1122 : 27 1A                       beq     isr_irq_send_end
       1124 : 8E 20 80                    ldx     #tx_queue
       1127 : 17 FF C3                    lbsr    queue_remove
       112A : 24 05                       bcc     isr_irq_send_empty
       112C : B7 DF 01                    sta     ACIA_data       ; send character
       112F : 20 0D                       bra     isr_irq_send_end
       1131 :                     isr_irq_send_empty:
       1131 : 7D 21 00                    tst     tx_int_control
       1134 : 27 08                       beq     isr_irq_send_end
       1136 : 86 94                       lda     #RX_INT_TX_NO
 AS V1.42 Beta [Bld 204] - Source File echoitr.asm - Page 6 - 11/06/2021 16:32:45


       1138 : B7 DF 00                    sta     ACIA_control    ; disable Tx interrupt
       113B : 7F 21 00                    clr     tx_int_control
       113E :                     isr_irq_send_end:
       113E :                     isr_irq_return:
       113E : 3B                          rti
       113F :                     
       FFF8 :                             org     $FFF8
       FFF8 : 11 0C                       fdb     isr_irq
       FFFA :                     
       FFFE :                             org     $FFFE
       FFFE : 10 00                       fdb     initialize
      10000 :                     
 AS V1.42 Beta [Bld 204] - Source File echoitr.asm() - Page 7 - 11/06/2021 16:32:45


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.01 seconds assembly time

    312 lines source file
      2 passes
      0 errors
      0 warnings
