 AS V1.42 Beta [Bld 157] - Source File echo.asm - Page 1 - 03/12/2020 11:32:45 PM


          0 :                             cpu     6809
          0 :                             include "mc6809.inc"
(1)       0 :                     ;;; Condition Code Register (CC)
(1)       0 : =$1                 CC_CARRY      equ  %00000001   ; set to 1 if carry occurred
(1)       0 : =$2                 CC_OVERFLOW   equ  %00000010   ; set to 1 if overflow occurred
(1)       0 : =$4                 CC_ZERO       equ  %00000100   ; set to 1 if result is zero
(1)       0 : =$8                 CC_NEGATIVE   equ  %00001000   ; set to 1 if result is negative
(1)       0 : =$10                CC_IRQ        equ  %00010000   ; if 1, IRQ is masked
(1)       0 : =$20                CC_HALF_CARRY equ  %00100000   ; if 1, decimal carry from least digit occurred
(1)       0 : =$40                CC_FIRQ       equ  %01000000   ; if 1, FIRQ is masked
(1)       0 : =$80                CC_ENTIRE     equ  %10000000   ; set to 1 if entire registers are pushed
(1)       0 :                     
          0 :                     
          0 :                     ;;; MC6850 Asynchronous Communication Interface Adapter
          0 : =$FFC0              ACIA:   equ     $FFC0
          0 :                             include "mc6850.inc"
(1)       0 :                     ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :                     
(1)       0 :                     ;;; MC6850
(1)       0 :                     ;;; Asynchronous Communication Interface Adapter
(1)       0 :                     
(1)       0 :                     ;;; Control register
(1)       0 : =$FFC0              ACIA_control:   equ     ACIA+0
(1)       0 :                             ;; Counter Divider Select Bits
(1)       0 : =$3                 CDS_gm:         equ     %11    ; Group mask
(1)       0 : =$0                 CDS_DIV1_gc:    equ     %00000000 ; /1
(1)       0 : =$1                 CDS_DIV16_gc:   equ     %00000001 ; /16
(1)       0 : =$2                 CDS_DIV64_gc:   equ     %00000010 ; /64
(1)       0 : =$3                 CDS_RESET_gc:   equ     %00000011 ; Master Reset
(1)       0 :                             ;; Word Select Bits
(1)       0 : =$1C                WSB_gm:         equ     %00011100 ; Group mask
(1)       0 : =$0                 WSB_7E2_gc:     equ     %00000000 ; 7 Bits + Even Parity + 2 Stop Bits
(1)       0 : =$4                 WSB_7O2_gc:     equ     %00000100 ; 7 bits + Odd Parity  + 2 Stop Bits
(1)       0 : =$8                 WSB_7E1_gc:     equ     %00001000 ; 7 bits + Even Parity + 1 Stop Bits
(1)       0 : =$C                 WSB_7O1_gc:     equ     %00001100 ; 7 bits + Odd Parity  + 1 Stop Bits
(1)       0 : =$10                WSB_8N2_gc:     equ     %00010000 ; 8 bits + No Parity   + 2 Stop Bits
(1)       0 : =$14                WSB_8N1_gc:     equ     %00010100 ; 8 bits + No Parity   + 1 Stop Bits
(1)       0 : =$18                WSB_8E1_gc:     equ     %00011000 ; 8 bits + Even Parity + 1 Stop Bits
(1)       0 : =$1C                WSB_8O1_gc:     equ     %00011100 ; 8 bits + Odd Parity  + 1 Stop Bits
(1)       0 :                             ;; Transmit Control Bits
(1)       0 : =$60                TCB_gm:         equ     %01100000 ; Group mask
(1)       0 : =$0                 TCB_DI_gc:      equ     %00000000 ; RTS=Low,  Tx Interrupt Disabled
(1)       0 : =$20                TCB_EI_gc:      equ     %00100000 ; RTS=Low,  Tx Interrupt Enabled
(1)       0 : =$40                TCB_RTS_gc:     equ     %01000000 ; RTS=High, Tx Interrupt Disabled
(1)       0 : =$60                TCB_BREAK_gc:   equ     %01100000 ; RTS=Low,  Tx Interrupt Disabled
(1)       0 :                                                       ; Transmit Break Level
(1)       0 : =$80                RIEB_bm:        equ     %10000000 ; Receive Interrupt Enable Bit mask
(1)       0 :                     
(1)       0 :                     ;;; Status register
(1)       0 : =$FFC0              ACIA_status:    equ     ACIA+0
(1)       0 : =$1                 RDRF_bm:        equ     %00000001 ; Receive Data Register Full
(1)       0 : =$2                 TDRE_bm:        equ     %00000010 ; Transmit Data Register Empty
(1)       0 : =$4                 DCDF_bm:        equ     %00000100 ; Data Carrier Detect Flag
(1)       0 : =$8                 CTSF_bm:        equ     %00001000 ; Clear To Send Flag
(1)       0 : =$10                FERR_bm:        equ     %00010000 ; Frame Error Flag
(1)       0 : =$20                OVRN_bm:        equ     %00100000 ; Receiver Overrun Flag
(1)       0 : =$40                PERR_bm:        equ     %01000000 ; Parity Error Flag
(1)       0 : =$80                IRQF_bm:        equ     %10000000 ; Interrupt Request Flag
(1)       0 :                     
(1)       0 :                     ;;; Data register
 AS V1.42 Beta [Bld 157] - Source File echo.asm(mc6850.inc) - Page 2 - 03/12/2020 11:32:45 PM


(1)       0 : =$FFC1              ACIA_data:      equ     ACIA+1          ; Data register
(1)       0 :                     
          0 :                     
       F000 :                             org     $F000
       F000 : =$F000              stack:  equ     *
       F000 :                     
       1000 :                             org     $1000
       1000 :                     initialize:
       1000 : 10 CE F0 00                 lds     #stack
       1004 : 86 03                       lda     #CDS_RESET_gc   ; Master reset
       1006 : B7 FF C0                    sta     ACIA_control
       1009 : 86 14                       lda     #WSB_8N1_gc        ; 8 bits + No Parity + 1 Stop Bits
       100B : 8A A0                       ora     #TCB_EI_gc|RIEB_bm ; Transmit, Receive interrupts enable
       100D : B7 FF C0                    sta     ACIA_control
       1010 : 1A 10                       orcc    #CC_IRQ         ; Set Interrupt mask
       1012 :                     
       1012 :                     receive_loop:
       1012 : B6 FF C0                    lda     ACIA_status
       1015 : 85 01                       bita    #RDRF_bm
       1017 : 27 F9                       beq     receive_loop
       1019 :                     receive_data:
       1019 : F6 FF C1                    ldb     ACIA_data
       101C :                     transmit_loop:
       101C : B6 FF C0                    lda     ACIA_status
       101F : 85 02                       bita    #TDRE_bm
       1021 : 27 F9                       beq     transmit_loop
       1023 :                     transmit_data:
       1023 : F7 FF C1                    stb     ACIA_data
       1026 : C1 0D                       cmpb    #$0d
       1028 : 26 E8                       bne     receive_loop
       102A : C6 0A                       ldb     #$0a
       102C : 20 EE                       bra     transmit_loop
       102E :                     
       FFFE :                             org     $FFFE
       FFFE : 10 00                       fdb     initialize
      10000 :                     
 AS V1.42 Beta [Bld 157] - Source File echo.asm - Page 3 - 03/12/2020 11:32:45 PM


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.00 seconds assembly time

     96 lines source file
      1 pass
      0 errors
      0 warnings
