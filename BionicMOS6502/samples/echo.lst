   0:                             CPU  6502
   0:                             INCLUDE              "mos6502.inc"
   0:             ;;; -*- mode: asm; mode: flyspell-prog; -*-
   0:
   0:             ;;; MOS6502
   0:             ;;; Processor Status Register P
   0: =$1         P_CARRY:        EQU  %00000001       ; set to 1 if carry occurred
   0: =$2         P_ZERO:         EQU  %00000010       ; set to 1 if result is zero
   0: =$4         P_IRQ:          EQU  %00000100       ; if 1, IRQ is disabled
   0: =$8         P_DECIMAL:      EQU  %00001000       ; if 1, decimal mode
   0: =$10        P_BRK:          EQU  %00010000       ; if 1, BRK command
   0: =$2         P_OVERFLOW:     EQU  %00000010       ; set to 1 if overflow occurred
   0: =$8         P_NEGATIVE:     EQU  %00001000       ; set to 1 if result is negative
   0:
   0:             ;;; Vector
   0: =$FFFA      VEC_NMI:        EQU  $FFFA           ; $FFFA: Non Maskable Interrupt
   0: =$FFFC      VEC_RESET:      EQU  $FFFC           ; $FFFE: Reset
   0: =$FFFE      VEC_IRQ:        EQU  $FFFE           ; $FFFE: Interrupt Request and BRK command
   0:
   0:             ;;; MC6850 Asynchronous Communication Interface Adapter
   0: =$DF00      ACIA:           EQU  $DF00
   0:                             INCLUDE              "mc6850.inc"
   0:             ;;; -*- mode: asm; mode: flyspell-prog; -*-
   0:
   0:             ;;; MC6850
   0:             ;;; Asynchronous Communication Interface Adapter
   0:
   0:             ;;; Control register
   0: =$DF00      ACIA_control:   EQU  ACIA+0
   0:             ;; Counter Divider Select Bits
   0: =$3         CDS_gm:         EQU  %11             ; Group mask
   0: =$0         CDS_DIV1_gc:    EQU  %00000000       ; /1
   0: =$1         CDS_DIV16_gc:   EQU  %00000001       ; /16
   0: =$2         CDS_DIV64_gc:   EQU  %00000010       ; /64
   0: =$3         CDS_RESET_gc:   EQU  %00000011       ; Master Reset
   0:             ;; Word Select Bits
   0: =$1C        WSB_gm:         EQU  %00011100       ; Group mask
   0: =$0         WSB_7E2_gc:     EQU  %00000000       ; 7 Bits + Even Parity + 2 Stop Bits
   0: =$4         WSB_7O2_gc:     EQU  %00000100       ; 7 bits + Odd Parity  + 2 Stop Bits
   0: =$8         WSB_7E1_gc:     EQU  %00001000       ; 7 bits + Even Parity + 1 Stop Bits
   0: =$C         WSB_7O1_gc:     EQU  %00001100       ; 7 bits + Odd Parity  + 1 Stop Bits
   0: =$10        WSB_8N2_gc:     EQU  %00010000       ; 8 bits + No Parity   + 2 Stop Bits
   0: =$14        WSB_8N1_gc:     EQU  %00010100       ; 8 bits + No Parity   + 1 Stop Bits
   0: =$18        WSB_8E1_gc:     EQU  %00011000       ; 8 bits + Even Parity + 1 Stop Bits
   0: =$1C        WSB_8O1_gc:     EQU  %00011100       ; 8 bits + Odd Parity  + 1 Stop Bits
   0:             ;; Transmit Control Bits
   0: =$60        TCB_gm:         EQU  %01100000       ; Group mask
   0: =$0         TCB_DI_gc:      EQU  %00000000       ; RTS=Low,  Tx Interrupt Disabled
   0: =$20        TCB_EI_gc:      EQU  %00100000       ; RTS=Low,  Tx Interrupt Enabled
   0: =$40        TCB_RTS_gc:     EQU  %01000000       ; RTS=High, Tx Interrupt Disabled
   0: =$60        TCB_BREAK_gc:   EQU  %01100000       ; RTS=Low,  Tx Interrupt Disabled
   0:             ; Transmit Break Level
   0: =$80        RIEB_bm:        EQU  %10000000       ; Receive Interrupt Enable Bit mask
   0:
   0:             ;;; Status register
   0: =$DF00      ACIA_status:    EQU  ACIA+0
   0: =$1         RDRF_bm:        EQU  %00000001       ; Receive Data Register Full
   0: =$2         TDRE_bm:        EQU  %00000010       ; Transmit Data Register Empty
   0: =$4         DCDF_bm:        EQU  %00000100       ; Data Carrier Detect Flag
   0: =$8         CTSF_bm:        EQU  %00001000       ; Clear To Send Flag
   0: =$10        FERR_bm:        EQU  %00010000       ; Frame Error Flag
   0: =$20        OVRN_bm:        EQU  %00100000       ; Receiver Overrun Flag
   0: =$40        PERR_bm:        EQU  %01000000       ; Parity Error Flag
   0: =$80        IRQF_bm:        EQU  %10000000       ; Interrupt Request Flag
   0:
   0:             ;;; Data register
   0: =$DF01      ACIA_data:      EQU  ACIA+1          ; Data register
   0:
   0: =$1FF       stack:          EQU  $01ff
   0:
1000:                             ORG  $1000
1000:             initialize:
1000: A2 FF                       LDX  #stack
1002: 9A                          TXS
1003: D8                          CLD                  ; clear decimal flag
1004: A9 03                       LDA  #CDS_RESET_gc   ; Master reset
1006: 8D 00 DF                    STA  ACIA_control
1009: A9 14                       LDA  #WSB_8N1_gc     ; 8 bits + No Parity + 1 Stop Bits
100B:             ; Transmit, Receive interrupts disabled
100B: 8D 00 DF                    STA  ACIA_control
100E:
100E:             receive_loop:
100E: AD 00 DF                    LDA  ACIA_status
1011: 29 01                       AND  #RDRF_bm
1013: F0 F9                       BEQ  receive_loop
1015:             receive_data:
1015: AD 01 DF                    LDA  ACIA_data
1018: 48                          PHA
1019:             transmit_loop:
1019: AD 00 DF                    LDA  ACIA_status
101C: 29 02                       AND  #TDRE_bm
101E: F0 F9                       BEQ  transmit_loop
1020:             transmit_data:
1020: 68                          PLA
1021: 8D 01 DF                    STA  ACIA_data
1024: C9 0D                       CMP  #$0d
1026: D0 E6                       BNE  receive_loop
1028: A9 0A                       LDA  #$0a
102A: 48                          PHA
102B: D0 EC                       BNE  transmit_loop
102D:
FFFC:                             ORG  VEC_RESET
FFFC: 00 10                       FDB  initialize
