          0 :                            cpu     6502
          0 :                            include "w65c816s.inc"
(1)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :
(1)       0 :                            include "mos6502.inc"
(2)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(2)       0 :
(2)       0 :                    ;;; MOS6502
(2)       0 :                    ;;; Processor Status Register P
(2)       0 : =1                 P_CARRY:        equ     %00000001   ; set to 1 if carry occurred
(2)       0 : =2                 P_ZERO:         equ     %00000010   ; set to 1 if result is zero
(2)       0 : =4                 P_IRQ:          equ     %00000100   ; if 1, IRQ is disabled
(2)       0 : =8                 P_DECIMAL:      equ     %00001000   ; if 1, decimal mode
(2)       0 : =10                P_BRK:          equ     %00010000   ; if 1, BRK command
(2)       0 : =2                 P_OVERFLOW:     equ     %00000010   ; set to 1 if overflow occurred
(2)       0 : =8                 P_NEGATIVE:     equ     %00001000   ; set to 1 if result is negative
(2)       0 :
(2)       0 :                    ;;; Vector
(2)       0 : =FFFA              VEC_NMI:        equ     $FFFA  ; $FFFA: Non Maskable Interrupt
(2)       0 : =FFFC              VEC_RESET:      equ     $FFFC  ; $FFFE: Reset
(2)       0 : =FFFE              VEC_IRQ:        equ     $FFFE  ; $FFFE: Interrupt Request and BRK command
(1)       0 :
(1)       0 :                    ;;; W65C816S
(1)       0 :                    ;;; Processor Status Register P
(1)       0 : =10                P_X:    equ     %00010000       ; if 0, X and Y are 16 bit.
(1)       0 : =20                P_M:    equ     %00100000       ; if 0, A is 16 bit.
(1)       0 :
(1)       0 :                    ;;; Emulation Mode Vector Locations
(1)       0 : =FFF8              VEC_ABORT:      equ     $FFF8   ; $FFF8: Abort
(1)       0 : =FFF4              VEC_COP:        equ     $FFF4   ; $FFF4: COP command
(1)       0 :
(1)       0 :                    ;;; Native Mode Vector Locations
(1)       0 : =FFEE              NVEC_IRQ:       equ     $FFEE   ; $FFEE: Interrupt Request
(1)       0 : =FFEA              NVEC_NMI:       equ     $FFEA   ; $FFEA: Non Maskable Interrupt
(1)       0 : =FFE8              NVEC_ABORT:     equ     $FFE8   ; $FFE8: Abort
(1)       0 : =FFE6              NVEC_BRK:       equ     $FFE6   ; $FFE6: BRK command
(1)       0 : =FFE4              NVEC_COP:       equ     $FFE4   ; $FFE4: COP command
          0 :
          0 :                    ;;; MC6850 Asynchronous Communication Interface Adapter
          0 : =DF00              ACIA:   equ     $DF00
          0 :                            include "mc6850.inc"
(1)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :
(1)       0 :                    ;;; MC6850
(1)       0 :                    ;;; Asynchronous Communication Interface Adapter
(1)       0 :
(1)       0 :                    ;;; Control register
(1)       0 : =DF00              ACIA_control:   equ     ACIA+0
(1)       0 :                            ;; Counter Divider Select Bits
(1)       0 : =3                 CDS_gm:         equ     %11    ; Group mask
(1)       0 : =0                 CDS_DIV1_gc:    equ     %00000000 ; /1
(1)       0 : =1                 CDS_DIV16_gc:   equ     %00000001 ; /16
(1)       0 : =2                 CDS_DIV64_gc:   equ     %00000010 ; /64
(1)       0 : =3                 CDS_RESET_gc:   equ     %00000011 ; Master Reset
(1)       0 :                            ;; Word Select Bits
(1)       0 : =1C                WSB_gm:         equ     %00011100 ; Group mask
(1)       0 : =0                 WSB_7E2_gc:     equ     %00000000 ; 7 Bits + Even Parity + 2 Stop Bits
(1)       0 : =4                 WSB_7O2_gc:     equ     %00000100 ; 7 bits + Odd Parity  + 2 Stop Bits
(1)       0 : =8                 WSB_7E1_gc:     equ     %00001000 ; 7 bits + Even Parity + 1 Stop Bits
(1)       0 : =C                 WSB_7O1_gc:     equ     %00001100 ; 7 bits + Odd Parity  + 1 Stop Bits
(1)       0 : =10                WSB_8N2_gc:     equ     %00010000 ; 8 bits + No Parity   + 2 Stop Bits
(1)       0 : =14                WSB_8N1_gc:     equ     %00010100 ; 8 bits + No Parity   + 1 Stop Bits
(1)       0 : =18                WSB_8E1_gc:     equ     %00011000 ; 8 bits + Even Parity + 1 Stop Bits
(1)       0 : =1C                WSB_8O1_gc:     equ     %00011100 ; 8 bits + Odd Parity  + 1 Stop Bits
(1)       0 :                            ;; Transmit Control Bits
(1)       0 : =60                TCB_gm:         equ     %01100000 ; Group mask
(1)       0 : =0                 TCB_DI_gc:      equ     %00000000 ; RTS=Low,  Tx Interrupt Disabled
(1)       0 : =20                TCB_EI_gc:      equ     %00100000 ; RTS=Low,  Tx Interrupt Enabled
(1)       0 : =40                TCB_RTS_gc:     equ     %01000000 ; RTS=High, Tx Interrupt Disabled
(1)       0 : =60                TCB_BREAK_gc:   equ     %01100000 ; RTS=Low,  Tx Interrupt Disabled
(1)       0 :                                                      ; Transmit Break Level
(1)       0 : =80                RIEB_bm:        equ     %10000000 ; Receive Interrupt Enable Bit mask
(1)       0 :
(1)       0 :                    ;;; Status register
(1)       0 : =DF00              ACIA_status:    equ     ACIA+0
(1)       0 : =1                 RDRF_bm:        equ     %00000001 ; Receive Data Register Full
(1)       0 : =2                 TDRE_bm:        equ     %00000010 ; Transmit Data Register Empty
(1)       0 : =4                 DCDF_bm:        equ     %00000100 ; Data Carrier Detect Flag
(1)       0 : =8                 CTSF_bm:        equ     %00001000 ; Clear To Send Flag
(1)       0 : =10                FERR_bm:        equ     %00010000 ; Frame Error Flag
(1)       0 : =20                OVRN_bm:        equ     %00100000 ; Receiver Overrun Flag
(1)       0 : =40                PERR_bm:        equ     %01000000 ; Parity Error Flag
(1)       0 : =80                IRQF_bm:        equ     %10000000 ; Interrupt Request Flag
(1)       0 :
(1)       0 :                    ;;; Data register
(1)       0 : =DF01              ACIA_data:      equ     ACIA+1          ; Data register
          0 :
          0 : =1FF               stack:  equ     $01ff
          0 :
       1000 :                            org     $1000
       1000 :                    initialize:
       1000 : A2 FF                      ldx     #stack & 0xFF
       1002 : 9A                         txs
       1003 : D8                         cld                     ; clear decimal flag
       1004 : A9 03                      lda     #CDS_RESET_gc   ; Master reset
       1006 : 8D 00 DF                   sta     ACIA_control
       1009 : A9 14                      lda     #WSB_8N1_gc     ; 8 bits + No Parity + 1 Stop Bits
       100B :                                                    ; Transmit, Receive interrupts disabled
       100B : 8D 00 DF                   sta     ACIA_control
       100E :
       100E :                    receive_loop:
       100E : AD 00 DF                   lda     ACIA_status
       1011 : 29 01                      and     #RDRF_bm
       1013 : F0 F9                      beq     receive_loop
       1015 :                    receive_data:
       1015 : AD 01 DF                   lda     ACIA_data
       1018 : 48                         pha
       1019 :                    transmit_loop:
       1019 : AD 00 DF                   lda     ACIA_status
       101C : 29 02                      and     #TDRE_bm
       101E : F0 F9                      beq     transmit_loop
       1020 :                    transmit_data:
       1020 : 68                         pla
       1021 : 8D 01 DF                   sta     ACIA_data
       1024 : C9 0D                      cmp     #$0d
       1026 : D0 E6                      bne     receive_loop
       1028 : A9 0A                      lda     #$0a
       102A : 48                         pha
       102B : D0 EC                      bne     transmit_loop
       102D :
       FFFC :                            org     VEC_RESET
       FFFC : 00 10                      fdb     initialize
