   0:             ;;; 
   0:             ;;; A new way to distinguish 6502 variants in software
   0:             ;;; http://forum.6502.org/viewtopic.php?f=2&t=5931
   0:             ;;; 
   0:                             CPU  65c02
   0:                             INCLUDE              "mos6502.inc"
   0:             ;;; -*- mode: asm; mode: flyspell-prog; -*-
   0:
   0:             ;;; MOS6502
   0:             ;;; Processor Status Register P
   0: =$1         P_CARRY:        EQU  %00000001       ; set to 1 if carry occurred
   0: =$2         P_ZERO:         EQU  %00000010       ; set to 1 if result is zero
   0: =$4         P_IRQ:          EQU  %00000100       ; if 1, IRQ is disabled
   0: =$8         P_DECIMAL:      EQU  %00001000       ; if 1, decimal mode
   0: =$10        P_BRK:          EQU  %00010000       ; if 1, BRK command
   0: =$2         P_OVERFLOW:     EQU  %00000010       ; set to 1 if overflow occurred
   0: =$8         P_NEGATIVE:     EQU  %00001000       ; set to 1 if result is negative
   0:
   0:             ;;; Vector
   0: =$FFFA      VEC_NMI:        EQU  $FFFA           ; $FFFA: Non Maskable Interrupt
   0: =$FFFC      VEC_RESET:      EQU  $FFFC           ; $FFFE: Reset
   0: =$FFFE      VEC_IRQ:        EQU  $FFFE           ; $FFFE: Interrupt Request and BRK command
   0:
1000:                             ORG  $1000
1000:             detect:
1000: A9 00                       LDA  #0
1002: 85 84                       STA  $84
1004: 85 85                       STA  $85
1006: A9 1D                       LDA  #'N'^'S'        ; $1D
1008: 85 83                       STA  $83
100A: A9 6B                       LDA  #'S'^'8'
100C: 85 1D                       STA  $1D
100E: A9 4E                       LDA  #$4E            ; 'N'
1010:             ;; 6502:   lsr $83, eor $83
1010:             ;; 65SC02: nop, nop
1010:             ;; 65C02:  rmb4 $83
1010:             ;; 65816:  eor [$83]
1010: 47 83                       RMB4 $83
1012: 45 83                       EOR  $83
1014:             ;; 6502:   A='N'
1014:             ;; 65SC02: A='S'
1014:             ;; 65C02:  A='C'
1014:             ;; 65816:  A='8'
1014: 4C 14 10                    JMP  *
1017:
FFFC:                             ORG  VEC_RESET
FFFC: 00 10                       FDB  detect
