          0 :                    ;;; Floating point BASIC Console I/O routine
          0 :
          0 :                    ;;; putchar on FLAG0/SENSEB
       D500 :                            org  0xD500
       D500 :                    putchar:
       D500 : D4 7F                      ani     0x7F            ; strip off parity
       D502 : 01                         xae                     ; save char to E
       D503 : CA 81                      st      -127(p2)        ; save E
       D505 : C4 86                      ldi     134
       D507 : 8F 01                      dly     1               ; about 3 bit delay
       D509 : 06                         csa
       D50A : DC 01                      ori     1               ; start bit
       D50C : 07                         cas
       D50D : C4 09                      ldi     9
       D50F : CA E8                      st      -24(p2)         ; initialize bit count
       D511 :                    putchar_loop:
       D511 : C4 81                      ldi     129
       D513 : 8F 00                      dly     0               ; delay 1 bit time
       D515 : BA E8                      dld     -24(p2)         ; decrement bit count
       D517 : 98 10                      jz      putchar_stop
       D519 : 40                         lde
       D51A : D4 01                      ani     1               ;
       D51C : CA E9                      st      -23(p2)         ; extract LSB
       D51E : 01                         xae
       D51F : 1E                         rr                      ; shift right char
       D520 : 01                         xae
       D521 : 06                         csa
       D522 : DC 01                      ori     1
       D524 : E2 E9                      xor     -23(p2)         ; LSB to FLAG0
       D526 : 07                         cas
       D527 : 90 E8                      jmp     putchar_loop
       D529 :                    putchar_stop:
       D529 : 06                         csa
       D52A : D4 FE                      ani     0xFE            ; stop bit to FLAG0
       D52C : 07                         cas
       D52D : C2 81                      ld      -127(p2)
       D52F : 01                         xae                     ; restore E
       D530 : E4 0C                      xri     0xC
       D532 : 9C 04                      jnz     putchar_nol
       D534 : 8F FF                      dly     255
       D536 : 93 26                      jmp     38(p3)
       D538 :                    putchar_nol:
       D538 : D4 60                      ani     0x60
       D53A : 9F 26                      jnz     38(p3)
       D53C : 8F 10                      dly     16
       D53E : 93 26                      jmp     38(p3)
       D540 :
       D540 :
       D540 :                    ;;; getchar on FLAG0/SENSEB
       D5CE :                            org     0xD5CE
       D5CE :                    getchar:
       D5CE : C4 08                      ldi     8
       D5D0 : CA EB                      st      -21(p2)         ; initialize bit count
       D5D2 :                    getchar_wait:
       D5D2 : 06                         csa
       D5D3 : D4 20                      ani     0x20            ; check start bit on SENSEB
       D5D5 : 9C FB                      jnz     getchar_wait ; branch if SENSEB=HIGH
       D5D7 : C4 3D                      ldi     61
       D5D9 : 8F 00                      dly     0               ; delay 1/2 bit
       D5DB : 06                         csa
       D5DC : D4 20                      ani     0x20            ; check start bit on SENSEB
       D5DE : 9C F2                      jnz     getchar_wait ; brach if SENSEB=HIGH
       D5E0 :                    getchar_loop:
       D5E0 : C4 96                      ldi     150
       D5E2 : 8F 00                      dly     0              ; delay 1 bit
       D5E4 : 06                         csa
       D5E5 : D4 20                      ani     0x20
       D5E7 : 98 02                      jz      getchar_zero ; branch if SENSEB=LOW
       D5E9 : C4 01                      ldi     1
       D5EB :                    getchar_zero:
       D5EB : 1F                         rrl                     ; 1/0 shift into L bit
       D5EC : 01                         xae
       D5ED : 1D                         srl                     ; shift L into MSB
       D5EE : 01                         xae
       D5EF : BA EB                      dld     -21(p2)         ; decrement bit count
       D5F1 : 9C ED                      jnz     getchar_loop
       D5F3 : C4 96                      ldi     150
       D5F5 : 8F 00                      dly     0               ; delay about 1 bit
       D5F7 : 40                         lde
       D5F8 : D4 7F                      ani     0x7F            ; strip off parity bit
       D5FA : 01                         xae
       D5FB : 40                         lde
       D5FC : D4 40                      ani     0x40
       D5FE : 98 04                      jz      getchar_nonalpha
       D600 : 40                         lde
       D601 : D4 5F                      ani     0x5F            ; toupper
       D603 : 01                         xae
       D604 :                    getchar_nonalpha:
       D604 : 40                         lde
       D605 : E4 0A                      xri     10              ; Newline
       D607 : 98 C5                      jz      getchar
       D609 : 40                         lde
       D60A : E4 03                      xri     3               ; Control-C
       D60C : 9F 26                      jnz     38(p3)
       D60E : C4 7C                      ldi     0x7C
       D610 : 93 9E                      jmp     -98(p3)
