   0:       ;;; Floating point BASIC Console I/O routine
   0:
   0:       ;;; putchar on FLAG0/SENSEB
D500:                       ORG  0xD500
D500:       putchar:
D500: D4 7F                 ANI  0x7F            ; strip off parity
D502: 01                    XAE                  ; save char to E
D503: CA 81                 ST   -127(p2)        ; save E
D505: C4 86                 LDI  134
D507: 8F 01                 DLY  1               ; about 3 bit delay
D509: 06                    CSA
D50A: DC 01                 ORI  1               ; start bit
D50C: 07                    CAS
D50D: C4 09                 LDI  9
D50F: CA E8                 ST   -24(p2)         ; initialize bit count
D511:       putchar_loop:
D511: C4 81                 LDI  129
D513: 8F 00                 DLY  0               ; delay 1 bit time
D515: BA E8                 DLD  -24(p2)         ; decrement bit count
D517: 98 10                 JZ   putchar_stop
D519: 40                    LDE
D51A: D4 01                 ANI  1               ;
D51C: CA E9                 ST   -23(p2)         ; extract LSB
D51E: 01                    XAE
D51F: 1E                    RR                   ; shift right char
D520: 01                    XAE
D521: 06                    CSA
D522: DC 01                 ORI  1
D524: E2 E9                 XOR  -23(p2)         ; LSB to FLAG0
D526: 07                    CAS
D527: 90 E8                 JMP  putchar_loop
D529:       putchar_stop:
D529: 06                    CSA
D52A: D4 FE                 ANI  0xFE            ; stop bit to FLAG0
D52C: 07                    CAS
D52D: C2 81                 LD   -127(p2)
D52F: 01                    XAE                  ; restore E
D530: E4 0C                 XRI  0xC
D532: 9C 04                 JNZ  putchar_nol
D534: 8F FF                 DLY  255
D536: 93 26                 JMP  38(p3)
D538:       putchar_nol:
D538: D4 60                 ANI  0x60
D53A: 9F 26                 JNZ  38(p3)
D53C: 8F 10                 DLY  16
D53E: 93 26                 JMP  38(p3)
D540:
D540:
D540:       ;;; getchar on FLAG0/SENSEB
D5CE:                       ORG  0xD5CE
D5CE:       getchar:
D5CE: C4 08                 LDI  8
D5D0: CA EB                 ST   -21(p2)         ; initialize bit count
D5D2:       getchar_wait:
D5D2: 06                    CSA
D5D3: D4 20                 ANI  0x20            ; check start bit on SENSEB
D5D5: 9C FB                 JNZ  getchar_wait    ; branch if SENSEB=HIGH
D5D7: C4 3D                 LDI  61
D5D9: 8F 00                 DLY  0               ; delay 1/2 bit
D5DB: 06                    CSA
D5DC: D4 20                 ANI  0x20            ; check start bit on SENSEB
D5DE: 9C F2                 JNZ  getchar_wait    ; brach if SENSEB=HIGH
D5E0:       getchar_loop:
D5E0: C4 96                 LDI  150
D5E2: 8F 00                 DLY  0               ; delay 1 bit
D5E4: 06                    CSA
D5E5: D4 20                 ANI  0x20
D5E7: 98 02                 JZ   getchar_zero    ; branch if SENSEB=LOW
D5E9: C4 01                 LDI  1
D5EB:       getchar_zero:
D5EB: 1F                    RRL                  ; 1/0 shift into L bit
D5EC: 01                    XAE
D5ED: 1D                    SRL                  ; shift L into MSB
D5EE: 01                    XAE
D5EF: BA EB                 DLD  -21(p2)         ; decrement bit count
D5F1: 9C ED                 JNZ  getchar_loop
D5F3: C4 96                 LDI  150
D5F5: 8F 00                 DLY  0               ; delay about 1 bit
D5F7: 40                    LDE
D5F8: D4 7F                 ANI  0x7F            ; strip off parity bit
D5FA: 01                    XAE
D5FB: 40                    LDE
D5FC: D4 40                 ANI  0x40
D5FE: 98 04                 JZ   getchar_nonalpha
D600: 40                    LDE
D601: D4 5F                 ANI  0x5F            ; toupper
D603: 01                    XAE
D604:       getchar_nonalpha:
D604: 40                    LDE
D605: E4 0A                 XRI  10              ; Newline
D607: 98 C5                 JZ   getchar
D609: 40                    LDE
D60A: E4 03                 XRI  3               ; Control-C
D60C: 9F 26                 JNZ  38(p3)
D60E: C4 7C                 LDI  0x7C
D610: 93 9E                 JMP  -98(p3)
