   0:                       CPU  ins8060
   0:                       INCLUDE              "ins8060.inc"
   0:       ;;; -*- mode: asm; mode: flyspell-prog; -*-
   0:
   0:       ;;; INS8060
   0:       ;;; Status Register
   0: =$80  S_CY:           EQU  0x80            ; Carry bit
   0: =$80  S_L:            EQU  0x80            ; Link bit
   0: =$40  S_OV:           EQU  0x40            ; Overflow bit
   0: =$20  S_SB:           EQU  0x20            ; Sense B bit
   0: =$10  S_SA:           EQU  0x10            ; Sense A bit
   0: =$8   S_IE:           EQU  0x08            ; Interrupt Enable bit
   0: =$4   S_F2:           EQU  0x04            ; Flag 2 bit
   0: =$2   S_F1:           EQU  0x02            ; Flag 1 bit
   0: =$1   S_F0:           EQU  0x01            ; Flag 0 bit
   0:
   0:       ;;; Dynamic Offset by E register
   0: =$80  OFFSET_E:       EQU  0x80            ; offset by E register
   0:
   0:       ;;; Transfer locations
   0: =$1   ORG_RESTART:    EQU  0x0001          ; Restart transfer location
   0:
   0:       ;;; MC6850 Asynchronous Communication Interface Adapter
   0: =$DF00    ACIA:       EQU  0xDF00
   0:                       INCLUDE              "mc6850.inc"
   0:       ;;; -*- mode: asm; mode: flyspell-prog; -*-
   0:
   0:       ;;; MC6850
   0:       ;;; Asynchronous Communication Interface Adapter
   0:
   0:       ;;; Control register
   0: =$DF00    ACIA_control:       EQU  ACIA+0
   0:       ;; Counter Divider Select Bits
   0: =$3   CDS_gm:         EQU  0b11            ; Group mask
   0: =$0   CDS_DIV1_gc:    EQU  0b00000000      ; /1
   0: =$1   CDS_DIV16_gc:   EQU  0b00000001      ; /16
   0: =$2   CDS_DIV64_gc:   EQU  0b00000010      ; /64
   0: =$3   CDS_RESET_gc:   EQU  0b00000011      ; Master Reset
   0:       ;; Word Select Bits
   0: =$1C  WSB_gm:         EQU  0b00011100      ; Group mask
   0: =$0   WSB_7E2_gc:     EQU  0b00000000      ; 7 Bits + Even Parity + 2 Stop Bits
   0: =$4   WSB_7O2_gc:     EQU  0b00000100      ; 7 bits + Odd Parity  + 2 Stop Bits
   0: =$8   WSB_7E1_gc:     EQU  0b00001000      ; 7 bits + Even Parity + 1 Stop Bits
   0: =$C   WSB_7O1_gc:     EQU  0b00001100      ; 7 bits + Odd Parity  + 1 Stop Bits
   0: =$10  WSB_8N2_gc:     EQU  0b00010000      ; 8 bits + No Parity   + 2 Stop Bits
   0: =$14  WSB_8N1_gc:     EQU  0b00010100      ; 8 bits + No Parity   + 1 Stop Bits
   0: =$18  WSB_8E1_gc:     EQU  0b00011000      ; 8 bits + Even Parity + 1 Stop Bits
   0: =$1C  WSB_8O1_gc:     EQU  0b00011100      ; 8 bits + Odd Parity  + 1 Stop Bits
   0:       ;; Transmit Control Bits
   0: =$60  TCB_gm:         EQU  0b01100000      ; Group mask
   0: =$0   TCB_DI_gc:      EQU  0b00000000      ; RTS=Low,  Tx Interrupt Disabled
   0: =$20  TCB_EI_gc:      EQU  0b00100000      ; RTS=Low,  Tx Interrupt Enabled
   0: =$40  TCB_RTS_gc:     EQU  0b01000000      ; RTS=High, Tx Interrupt Disabled
   0: =$60  TCB_BREAK_gc:   EQU  0b01100000      ; RTS=Low,  Tx Interrupt Disabled
   0:       ; Transmit Break Level
   0: =$80  RIEB_bm:        EQU  0b10000000      ; Receive Interrupt Enable Bit mask
   0:
   0:       ;;; Status register
   0: =$DF00    ACIA_status:        EQU  ACIA+0
   0: =$1   RDRF_bm:        EQU  0b00000001      ; Receive Data Register Full
   0: =$2   TDRE_bm:        EQU  0b00000010      ; Transmit Data Register Empty
   0: =$4   DCDF_bm:        EQU  0b00000100      ; Data Carrier Detect Flag
   0: =$8   CTSF_bm:        EQU  0b00001000      ; Clear To Send Flag
   0: =$10  FERR_bm:        EQU  0b00010000      ; Frame Error Flag
   0: =$20  OVRN_bm:        EQU  0b00100000      ; Receiver Overrun Flag
   0: =$40  PERR_bm:        EQU  0b01000000      ; Parity Error Flag
   0: =$80  IRQF_bm:        EQU  0b10000000      ; Interrupt Request Flag
   0:
   0:       ;;; Data register
   0: =$DF01    ACIA_data:  EQU  ACIA+1          ; Data register
   0: =$0   ACIA_C:         EQU  0               ; ACIA control offset
   0: =$0   ACIA_S:         EQU  0               ; ACIA status offset
   0: =$1   ACIA_D:         EQU  1               ; ACIA data register offset
   0:
1000:                       ORG  0x1000
1000: =$FFF stack:          EQU  $-1
1000:       initialize:
1000: C4 00                 LDI  ACIA & 0xFF
1002: 31                    XPAL P1
1003: C4 DF                 LDI  ACIA >> 8
1005: 35                    XPAH P1
1006: C4 03                 LDI  CDS_RESET_gc    ; Master reset
1008: C9 00                 ST   ACIA_C(P1)
100A: C4 14                 LDI  WSB_8N1_gc      ; 8 bits + No Parity + 1 Stop Bits
100C:       ; Transmit, Receive interrupts disabled
100C: C9 00                 ST   ACIA_C(P1)
100E:
100E:       receive_loop:
100E: C1 00                 LD   ACIA_S(P1)
1010: D4 01                 ANI  RDRF_bm
1012: 98 FA                 JZ   receive_loop
1014:       receive_data:
1014: C1 01                 LD   ACIA_D(P1)
1016: 01                    XAE                  ; E=data
1017:       transmit_loop:
1017: C1 00                 LD   ACIA_S(P1)
1019: D4 02                 ANI  TDRE_bm
101B: 98 FA                 JZ   transmit_loop
101D:       transmit_data:
101D: 01                    XAE                  ; A=data
101E: C9 01                 ST   ACIA_D(P1)
1020: E4 0D                 XRI  0x0D
1022: 9C EA                 JNZ  receive_loop
1024: C4 0A                 LDI  0x0A
1026: 01                    XAE                  ; E=data
1027: 90 EE                 JMP  transmit_loop
1029:
   1:                       ORG  ORG_RESTART
   1: =$0   _stack:         EQU  (stack & 0xF000) | ((stack + 1) & 0x0FFF)
   1: C4 00                 LDI  (_stack) & 0xFF
   3: 32                    XPAL P2
   4: C4 00                 LDI  _stack >> 8
   6: 36                    XPAH P2
   7: =$1FFF    _initialize:        EQU  (initialize & 0xF000) | ((initialize-1) & 0x0FFF)
   7: C4 FF                 LDI  _initialize & 0xFF
   9: 33                    XPAL P3
   A: C4 1F                 LDI  _initialize >> 8
   C: 37                    XPAH P3
   D: 3F                    XPPC P3
