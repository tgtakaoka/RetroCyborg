          0 :                            cpu     8070
          0 :
          0 : =48                COLD4:          equ     0x0048
          0 : =91E               CHKBRK:         equ     0x091E
          0 : =9E5               INITBD:         equ     0x09E5
          0 : =A00               ENDNIBL2:       equ     0x0A00
          0 : =FD00              BAUDFLG:        equ     0xFD00
          0 :
          0 :                    ;;; MC6850 ACIA
          0 : =DF00              ACIA:   equ     0xDF00
          0 : =0                 ACIA_C: equ     0               ; ACIA control offset
          0 : =0                 ACIA_S: equ     0               ; ACIA status offset
          0 : =1                 ACIA_D: equ     1               ; ACIA data register offset
          0 :
          0 :                    ;;; Baudrate flag
       FD00 :                            org     BAUDFLG
       FD00 : 00                         db      0               ; bit7:0 call extenal routine
       FD01 : 13 0A                      dw      getchar
       FD03 : 27 0A                      dw      putchar
       FD05 :
       FD05 :                    ;;; Override RAM end check
         48 :                            org     COLD4
         48 : 26 FF 7F                   ld      p2, =0x7fff
         4B : C6 02                      ld      a, @2, p2
         4D :
         4D :                    ;;; Break check
        922 :                            org     CHKBRK + 4
        922 : 20 FF 09                   jsr     check_break
        925 :
        925 :                    ;;; Override initialize console
        9E5 :                            org     INITBD          ; override INITBD
        9E5 :                    init_console:
        9E5 : 22 00 DF                   pli     p2, =ACIA
        9E8 : C4 03                      ld      a, =3           ; master reset
        9EA : CA 00                      st      a, ACIA_C, p2
        9EC : C4 14                      ld      a, =0x14        ; 8bits + no parity + 1stop
        9EE : CA 00                      st      a, ACIA_C, p2
        9F0 : 5E                         pop     p2
        9F1 : 5C                         ret
        9F2 :
        9F2 :                    ;;; New code
        9F2 :
        A00 :                            org     ENDNIBL2
        A00 :
        A00 :                    check_break:
        A00 : 22 00 DF                   pli     p2, =ACIA
        A03 : C2 00                      ld      a, ACIA_S, p2
        A05 : D4 01                      and     a, =1           ; bit0: receive data ready flag
        A07 : 6C 06                      bz      no_break
        A09 : C2 01                      ld      a, ACIA_D, p2   ; receive char
        A0B : E4 03                      xor     a, =0x03        ; Control-C
        A0D : 6C 02                      bz      got_break
        A0F :                    no_break:
        A0F : C4 01                      ld      a, =1
        A11 :                    got_break:
        A11 : 5E                         pop     p2
        A12 : 5C                         ret
        A13 :
        A13 :                    getchar:
        A13 : 22 00 DF                   pli     p2, =ACIA
        A16 : 0A                         push    a
        A17 :                    getchar_loop:
        A17 : C2 00                      ld      a, ACIA_S, p2
        A19 : D4 01                      and     a, =1           ; bit0:1 receive data ready flag
        A1B : 6C FA                      bz      getchar_loop
        A1D : C2 01                      ld      a, ACIA_D, p2   ; receive char
        A1F : C9 00                      st      a, 0, sp
        A21 : E4 0A                      xor     a, =0x0a        ; newline
        A23 : 6C F2                      bz      getchar_loop
        A25 : 38                         pop     a
        A26 : 5E                         pop     p2
        A27 :                            ;; fall-through to putchar
        A27 :
        A27 :                    putchar:
        A27 : 22 00 DF                   pli     p2, =ACIA
        A2A : 0A                         push    a               ; save char
        A2B :                    putchar_loop:
        A2B : C2 00                      ld      a, ACIA_S, p2
        A2D : D4 02                      and     a, =2           ; bit1:1 transmit data register empty
        A2F : 6C FA                      bz      putchar_loop
        A31 : 38                         pop     a
        A32 : 0A                         push    a
        A33 : D4 7F                      and     a, =0x7f        ; clear MSB
        A35 : CA 01                      st      a, ACIA_D, p2
        A37 : 38                         pop     a
        A38 : 5E                         pop     p2
        A39 : 5C                         ret
